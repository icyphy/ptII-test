<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="PositionConstraintCalculator" class="org.ptolemy.optimization.PositionConstraintCalculator">
  <description>
The class for calculation of constraints of Swarm-Robots.&#10;&#10;This class computes following constraint functions used in an optimization class.&#10;The number of functions is N X H, where N is the number of reference trajectories and H is prediction time horizon.&#10;N and H are obtained from the length of &quot;referenceTrajectories&quot; and &quot;trajectory&quot;, respectively.&#10;The output array consists of {f0_0, f0_1, ... , f0_t, f1_0, ... , f1_t, ... ,fi_t}.&#10;If i is &quot;robotID&quot;, constraint functions is&#10;fi_t = - (Px_t - Pi_t) * CovP^-1 * (Px_t - Pi_t) + 1.0 &amp;gt; 0,&#10;where Px_t is a position of robot at time t obtained from &quot;trajectory&quot;,&#10;Pi_t is a position of the robot predicted in previous control step obtained from &quot;referenceTrajectories&quot;,&#10;and CovP is the covariance of Pi at time t.&#10;If i is not &quot;robotID&quot;, constraint functions is&#10;fi_t = g(Pi) - sqrt(CovR) = |Px_t - Pi_t|^2 - D^2 - sqrt(CovR) &amp;gt; 0,&#10;CovR = (dg/dPi) * CovPi * (dg/dPi)T,&#10;where D is &quot;DistanceLimit&quot; parameter and Pi_t is a position of other robot or obstacle obtained from &quot;referenceTrajectories&quot;.&#10;This class outputs not only the results of constraints function, but also gradients of fi_t.  </description>
  <author>Shuhei Emoto</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Red (shuhei)</Pt.ProposedRating>
  <Pt.AcceptedRating></Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="referenceTrajectories"></port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="trajectory"></port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="positionConstraints"></port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="gradientOfConstraints"></port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="jacobianOfTrajectory"></port>
    <!--ptolemy.data.expr.Parameter-->
    <property name="DistanceLimit"></property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="ScalefactorOfVariance"></property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="RobotId"></property>
</doc>
