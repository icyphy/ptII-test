<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ParticleFilter" class="org.ptolemy.machineLearning.particleFilter.ParticleFilter">
  <description>
A Particle Filter Implementation&#10;&#10; &lt;p&gt;The particle filter runs on a state space model given by&#10; &lt;pre&gt;&#10; X_{t+1} = f(X_t, U_t, t)&#10; Y_{t} = g(X_t, U_t, t)&#10; X(0) = X0&#10; &lt;/pre&gt;&#10; where X is the state vector, U is the input vector, Y is the observation&#10; vector, and t is the model time. To use this actor :&#10; &lt;ul&gt;&#10;&#10; &lt;li&gt; For each control input in &lt;i&gt;U&lt;/i&gt;, create an input port with an arbitrary name.&#10; This actor will automatically create a parameter with the same name as the&#10; input port. That parameter will have its value set during execution to match&#10; the value of the input.&#10;&#10; &lt;li&gt; Fill in the &lt;i&gt;stateVariableNames&lt;/i&gt; parameter, which is&#10; an array of strings, with the names of the state variables in &lt;i&gt;X&lt;/i&gt;.&#10; These names can be arbitrary, since you will refer them to&#10; by name rather than by the symbol &lt;i&gt;X&lt;/i&gt;.&#10;&#10; &lt;li&gt; Specify an update function (part of &lt;i&gt;f&lt;/i&gt; above) for each&#10; state variable by creating a parameter named &lt;i&gt;name&lt;/i&gt;_update, where&#10; &lt;i&gt;name&lt;/i&gt; is the name of the state variable. The value of this&#10; parameter should be an expression giving the rate of change of&#10; this state variable as a function of any of the state variables,&#10; any input, any other actor parameter, and (possibly), the variable&#10; &lt;i&gt;t&lt;/i&gt;, representing current time.&#10;&#10; &lt;li&gt; For each measurement input, create an input port with name &lt;i&gt;measurementName&lt;/i&gt;_m,&#10; where &lt;i&gt;measurementName&lt;/i&gt; is an arbitrary measurement name. Add a parameter to the actor&#10; named &lt;i&gt;measurementName&lt;/i&gt;, which is an expression describing the measurement's&#10; correspondence to the state space. Namely, the measurement equation should be a function&#10; of &lt;i&gt;stateVariableNames&lt;/i&gt;, &lt;i&gt;U&lt;/i&gt; and &lt;i&gt;t&lt;/i&gt;.&#10;&#10; &lt;li&gt; Fill in the measurement covariance parameter, that should be a square double matrix with&#10; dimension equal to the number of measurement equations defined. In case the measurements are&#10; independent, the matrix should be a scaled identity&#10;&#10; &lt;li&gt; Fill in the processNoise parameter, which should be a function that samples from the&#10; (possibly multivariate) distribution the state transition process noise is distributed according&#10; to. The return type should be an array of size equal to the state-space size&#10;&#10; &lt;li&gt; Specify the prior distribution as a random function from which the particles will be sampled.&#10; For instance, use the the random() function to draw uniform random variables in [0,1] or use&#10; multivariateGaussian() or gaussian() for Gaussian priors.The return type should be an array of size&#10; equal to the state-space size&#10;&#10; &lt;li&gt; It is important to note how multiple measurement inputs are interpreted by the actor.&#10; This implementation interprets multiple measurement inputs to be conditionally&#10; independent given the hidden state. This allows the likelihood (weight) of each particle at time&#10; step t to be computed as a product of its likelihood with respect to each measurement at that time.&#10;&#10;&lt;li&gt; For additional parameters that are time varying, add arbitrarily many PortParameters to the actor&#10;and refer to the port parameter by port name within measurement and/or update equations.&#10; &lt;/ul&gt;&#10;&#10;&#10; The preinitialize() method of this actor is based on the ptolemy.domain.ct.lib.DifferentialSystem&#10; actor by Jie Liu.  </description>
  <author>Ilge Akkaya</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Red (ilgea)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (ilgea)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="measurementCovariance">Standard deviation of the measurement noise ( assuming  Gaussian measurement noise&#10; at the moment).</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="prior">An expression for the prior distribution from which the samples are drawn.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="processNoise">The process noise. If the system contains multiple state variables, the process noise&#10; should be an expression that returns an ArrayToken. See multivariateGaussian for one such function.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="stateVariableNames">The names of the state variables, in an array of strings.&#10;  The default is an ArrayToken of an empty String.</property>
</doc>
