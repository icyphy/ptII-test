<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="HlaAttributeUpdater" class="org.hlacerti.lib.HlaAttributeUpdater">
  <description>
/**&#10; This actor is a kind-of output port that sends the data on its input to the&#10; federation through the network. In HLA, the terminology is that this actor&#10; &quot;updates&quot; the specified attribute value of the specified instance whenever&#10; there is a data on its input. This attribute value will be &quot;reflected&quot; by&#10; all federates that have &quot;subscribed&quot; to this attribute.&#10; The time stamp of this update depends on the time management parameters of&#10; the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;, as explained in the documentation for that class.&#10; This actor assumes that there is exactly one HlaManager in the model&#10; that contains this actor.&#10; &lt;p&gt;&#10; The attribute of an instance that this actor updates is specified using&#10; three parameters: &lt;i&gt;attributeName&lt;/i&gt;, &lt;i&gt;className&lt;/i&gt;, and &lt;i&gt;instanceName&lt;/i&gt;.&#10; The updates will be reflected, for example, by an&#10; &lt;a href=&quot;../../../org/hlacerti/lib/HlaAttributeReflector.xml&quot;&gt;org.hlacerti.lib.HlaAttributeReflector&lt;/a&gt; whose three parameters match those of this actor.&#10; The &lt;i&gt;className&lt;/i&gt; and &lt;i&gt;attributeName&lt;/i&gt; are required to match&#10; a class and attribute specified in the FED file that is specified in the&#10; HlaManager. The &lt;i&gt;instanceName&lt;/i&gt; is an arbitrary name chosen by the&#10; designer for the instance of the class. It specifies the instance of the&#10; specified class whose attribute this actor updates. &#10; If the specified class does not have an attribute with the specified&#10; &lt;i&gt;attributeName&lt;/i&gt;, as defined in the FED file, or there is no class&#10; matching &lt;i&gt;className&lt;/i&gt; in the FED file, then an exception will be thrown.&#10; An exception is also thrown if the attribute name or the class name or&#10; the instance name is empty.&#10; &lt;p&gt;&#10; If a federate intends to update &lt;i&gt;k&lt;/i&gt; attributes of an instance, then it&#10; must contains &lt;i&gt;k&lt;/i&gt; HlaAttributeUpdater actors with the same&#10; &lt;i&gt;instanceName&lt;/i&gt;. A federate can update attributes of different instances&#10; of a same class.&#10; &lt;p&gt;&#10; The data type of the attribute value this actor updates is the same as the&#10; type of its &lt;i&gt;input&lt;/i&gt; port. The data type is used to define the bytes&#10; that are transported via the HLA runtime infrastructure (RTI). Currently,&#10; only a small set of primitive data types are supported.&#10; &lt;p&gt;&#10; The &lt;i&gt;useCertiMessageBuffer&lt;/i&gt; parameter works together with the data type&#10; to interpret the bits that are transported over the RTI. Specifically, an&#10; HLA RTI will transport arbitrary byte sequences regardless of what they&#10; represent.  CERTI, the particular RTI that Ptolemy II uses, provides a&#10; convenience feature that packs and unpacks the message bytes for a small set&#10; of data types.  This feature takes into account the annoyance that the byte&#10; order can be different on different platforms (big endian or little endian).&#10; If the attribute that this actor is updating is reflected by a &quot;foreign&quot; &#10; federate (not implemented in Ptolemy II), then this &lt;i&gt;useCertiMessageBuffer&lt;/i&gt;&#10; parameter should be set to true to ensure that byte order changes are&#10; handled. And in this case, only the small set of data types supported by&#10; CERTI can be used.  On the other hand, if the attribute is reflected by a &#10; Ptolemy II model, and the corresponding &lt;a href=&quot;../../../org/hlacerti/lib/HlaAttributeReflector.xml&quot;&gt;org.hlacerti.lib.HlaAttributeReflector&lt;/a&gt; does&#10; not not specify to use the CERTI message buffer, then this parameter should&#10; be false.&#10;   &#10; (Check if we can reuse this sentences:) Each class has attributes, and this&#10; actor sends updates to an attribute of an instance of a class when it&#10; receives data on its input.  If there are instances of &lt;a href=&quot;../../../org/hlacerti/lib/HlaAttributeReflector.xml&quot;&gt;org.hlacerti.lib.HlaAttributeReflector&lt;/a&gt;&#10; that refer to the same attribute of the same instance, then those will be&#10; notified of the update. &#10; If an instance with the specified name does not already exist, it will be&#10; created during initialization of the model. &#10; &#10; During initialization, the HlaManager will notify the RTI (Run Time&#10; Infrastructure) of the intent to update this particular attribute&#10; of this particular instance of the class.  </description>
  <author>Gilles Lasnier, Contributors: Patricia Derler, David Come</author>
  <version>$Id: HlaPublisher.java 214 2018-04-01 13:32:02Z j.cardoso $</version>
  <since>Ptolemy II 11.0</since>
  <Pt.ProposedRating>Yellow (glasnier)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (glasnier)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="input">The input port.</port>
    <!--ptolemy.data.expr.Parameter-->
    <property name="attributeName">The HLA attribute name the HLASubscriber is mapped to.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="classObjectName">The object class of the HLA attribute to publish.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="classInstanceName">The name of the HLA class instance for this HlaSubscriber.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="useCertiMessageBuffer">Indicate if the event is wrapped in a CERTI message buffer.</property>
</doc>
