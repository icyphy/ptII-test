<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="HlaAttributeReflector" class="org.hlacerti.lib.HlaAttributeReflector">
  <description>
This actor produces an output event whenever the specified attribute&#10; of the specified instance is updated by another federate in the federation.&#10; In HLA, the terminology is that this actor &quot;reflects&quot; the specified attribute&#10; value whenever another federate &quot;updates&quot; the attribute value.&#10; The time stamp of the output depends on the parameters of the&#10; &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;, as explained in the documentation for that class.&#10; This actor assumes that there is exactly one HlaManager in the model&#10; that contains this actor.&#10; &lt;p&gt;&#10; The attribute that this actor reflects is specified using three parameters:&#10; &lt;i&gt;attributeName&lt;/i&gt;, &lt;i&gt;className&lt;/i&gt;, and &lt;i&gt;instanceName&lt;/i&gt;.&#10; These three parameters specify the attribute to which this actor listens&#10; for updates.  Those updates could be produced, for example, by an&#10; &lt;a href=&quot;../../../org/hlacerti/lib/HlaPublisher.xml&quot;&gt;org.hlacerti.lib.HlaPublisher&lt;/a&gt; whose three parameters match those of this actor.&#10; The &lt;i&gt;className&lt;/i&gt; and &lt;i&gt;attributeName&lt;/i&gt; are required to match&#10; a class and attribute specified in the FED file&#10; that is specified in the HlaManager. The &lt;i&gt;instanceName&lt;/i&gt; is an arbitrary&#10; name chosen by the designer for the instance of the class. It specifies&#10; the instance of the specified class whose attribute this actor reflects.&#10; &lt;p&gt;&#10; If there is no instance with the specified &lt;i&gt;instanceName&lt;/i&gt;, then this actor&#10; produces no output. If a matching instance is later created, then this&#10; actor will begin producing outputs when that instance's attribute is updated.&#10; If the specified class does not have an attribute with the specified&#10; &lt;i&gt;attributeName&lt;/i&gt;, as defined in the FED file, or there is no class&#10; matching &lt;i&gt;className&lt;/i&gt; in the FED file, then an exception will be thrown.&#10; &lt;p&gt;&#10; The &lt;i&gt;attributeType&lt;/i&gt; parameter specifies the data type of the attribute&#10; to which this actor listens. This parameter has two effects. First, it sets&#10; the type of the &lt;i&gt;output&lt;/i&gt; port. Second, it specifies how to interpret&#10; the bytes that are transported via the HLA runtime infrastructure (RTI).&#10; Currently, only a small set of primitive data types are supported.&#10; &lt;p&gt;&#10; The &lt;i&gt;useCertiMessageBuffer&lt;/i&gt; parameter works together with the&#10; &lt;i&gt;attributeType&lt;/i&gt; parameter to interpret the bits that are transported&#10; over the RTI. Specifically, an HLA RTI will transport arbitrary byte sequences&#10; regardless of what they represent.  CERTI, the particular RTI that Ptolemy II&#10; uses, provides a convenience feature that packs and unpacks the message bytes&#10; for a small set of data types.  This feature takes into account the annoyance&#10; that the byte order can be different on different platforms (big endian or&#10; little endian). If the attribute that this actor is listening to is updated&#10; by a &quot;foreign&quot; federate (not implemented in Ptolemy II), then this&#10; &lt;i&gt;useCertiMessageBuffer&lt;/i&gt; parameter should be set to true to ensure that&#10; byte order changes are handled. And in this case, only the small set of data&#10; types supported by CERTI can be used.  On the other hand, if the attribute&#10; is updated by a Ptolemy II model, and that update does not not specify&#10; to use the CERTI message buffer, then this parameter should be false.  </description>
  <author>Gilles Lasnier, Janette Cardoso, Edward A. Lee. Contributors: Patricia Derler, David Come</author>
  <version>$Id: HlaAttributeReflector.java 214 2018-04-01 13:32:02Z j.cardoso $</version>
  <since>Ptolemy II 11.0</since>
  <Pt.ProposedRating>Yellow (glasnier)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (glasnier)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port through which the new value of each&#10;  update to the specified attribute of the specified instance&#10;  are sent. The type of this port is given by &lt;i&gt;attributeType&lt;/a&gt;.</port>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="attributeName">The name of the attribute to which this actor listens for updates.&#10;  This defaults to an empty string, but it must be non-empty to run the model.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="attributeType">The type of the attribute that this actor is listening to.&#10;  This will be used to set the type of the output port.&#10;  This is a string that defaults to &quot;int&quot;.&#10;  Currently, the only supported types are &quot;int&quot;, &quot;double&quot;, &quot;string&quot;,&#10;  and &quot;boolean&quot;.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="className">The name of the class whose attribute this actor listens for updates.&#10;  This defaults to an empty string, but it must be non-empty to run the model.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="instanceName">The name of the instance of the class to whose attribute this actor&#10;  listens for updates.&#10;  This defaults to an empty string, but it must be non-empty to run the model.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="useCertiMessageBuffer">Indicate whether the attribute value is conveyed through&#10;  a CERTI message buffer. This is a boolean that defaults to false.&#10;  It should be set to true if the attribute to which this actor&#10;  listens is updated by a foreign simulator. It can be false&#10;  if the attribute is updated by a federate implemented in Ptolemy II,&#10;  and if this corresponding parameter in the actor doing the updating&#10;  is also false.</property>
</doc>
