<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="HlaSubscriber" class="org.hlacerti.lib.HlaSubscriber">
  <description>
This actor provides information to subscribe, discover and reflect (i.e.,&#10; receive) updated values in the Ptolemy-HLA/CERTI framework.&#10;&#10; &lt;p&gt; This actor is associated with a unique HLA attribute of a given object &#10; instance. Reflected values of this HLA attribute are received from the HLA&#10; Federation by the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; attribute deployed in the same model. &#10; The &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; invokes the putReflectedAttribute() to put the &#10; received value in the HlaSubscriber actor token queue and to program its &#10; firing time, using the _fireAt() method.&#10; &#10;  &lt;/p&gt;&lt;p&gt;&#10; Parameters &lt;i&gt;classObjectName&lt;/i&gt; and &lt;i&gt;attributeName&lt;/i&gt; need to match the&#10; name of the class and the name of the attribute defined in the Federate &#10; Object Model (FOM) specified for the Federation and indicated in the FED file.&#10; The data type of the output port of this actor must have the same type of the&#10; HLA attribute (defined in the FOM, not present in the FED file). &#10; &lt;/p&gt;&lt;p&gt;&#10; The parameter &lt;i&gt;classInstanceName&lt;/i&gt; is chosen by the user. &#10; &#10; &lt;/p&gt;&lt;p&gt;&#10; Entering in more details:&#10; This actor provides 3 information: a class name &lt;i&gt;C&lt;/i&gt;, an attribute&#10; name &lt;i&gt;attr&lt;/i&gt; and an instance name &lt;i&gt;i&lt;/i&gt;. To each HlaSubscriber actor&#10; in a Ptolemy model (federate) corresponds a unique &lt;a href=&quot;../../../org/hlacerti/lib/HlaPublisher.xml&quot;&gt;org.hlacerti.lib.HlaPublisher&lt;/a&gt;&#10; actor in a (unique) federate with the same information.&#10; Let us recall some terms:&#10; - FOM: Federation Object Model&#10; - FED: Federation Execution Data, contains classes and attributes defined&#10;   in the FOM and, for each attribute, if it is timestamped and its QoS &#10; - RTI: Run-Time Infrastructure. The RTI has a Central RTI Component (CRC)&#10;   and one or more Local RTI Components (LRC). The LRC has a numerical &#10;   representation (handle) for all object classes and object class attributes&#10;   contained in the FED file.&#10; &#10; The information supplied in this actor by the user is used in the following&#10; way by the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; attribute (deployed in the same model):&#10; &#10; 1. During the initialization phase, the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;: &#10;  - Subscribes to all the &lt;i&gt;k&lt;/i attributes &lt;i&gt;attr-k&lt;/i of a class  &lt;i&gt;C&lt;/i&gt;&#10;    (gathered from &lt;i&gt;k&lt;/i HlaSubscriber actors) by calling&#10;    _rtia.subscribeObjectClassAttributes(classHandle, _attributesLocal), &#10;    where &lt;i&gt;classHandle&lt;/i is obtained by calling the HLA service &#10;    rtia.getObjectClassHandle() for  &lt;i&gt;C&lt;/i&gt;;&#10;    _attributesLocal is the set constructed by calling rtia.getAttributeHandle()&#10;    for each &lt;i&gt;attr&lt;/i in this Ptolemy federate  model (the set is obtained&#10;    from all HlaSubscriber actors that has the same class  &lt;i&gt;C&lt;/i&gt;); &#10;    - Receives the HLA callback informing the discovering of an instance of&#10;    class &lt;i&gt;C&lt;/i&gt; named &lt;i&gt;i&lt;/i&gt;:&#10;    rtia.discoverObjectInstance(instanceHandle, classHandle, someName), with &#10;    someName = &lt;i&gt;i&lt;/i&gt;; instanceHandle and classHandle are handles provided&#10;    by the RTI.&#10;    &#10; 2. During the simulation loop phase, the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; receives the RAV&#10; callback from the RTI with the new value of an attribute of a class instance. Each &#10; HlaSubscriber  actor is related to one RAV callback:&#10; rtia.reflectAttributeValues(instanceHandle, suppAttributes, tag, ravTimeStamp).&#10; The RAV callback, with a timestamp t'=&lt;i&gt;ravTimeStamp&lt;\i&gt; is received at the&#10; input port of the HlaPublisher actor, during the advance time phase that&#10; starts when the federate wants to advanced its time to &lt;i&gt;t&lt;\i&gt; (using NER or&#10; TAR time management, see &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; code).&#10; The optional parameter &lt;i&gt;tag&lt;/i&gt; is not used in the current implementation.&#10; &lt;/p&gt;&lt;p&gt;  </description>
  <author>Gilles Lasnier, Contributors: Patricia Derler, David Come</author>
  <version>$Id: HlaSubscriber.java 214 2018-04-01 13:32:02Z j.cardoso $</version>
  <since>Ptolemy II 11.0</since>
  <Pt.ProposedRating>Yellow (glasnier)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (glasnier)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port.</port>
    <!--ptolemy.data.expr.Parameter-->
    <property name="attributeName">The HLA attribute name the HLASubscriber is mapped to.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="classObjectName">The object class of the HLA attribute to subscribe to.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="classInstanceName">The name of the HLA class instance for this HlaSubscriber.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="typeSelector">The type of the output port specified through the user interface.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="useCertiMessageBuffer">Indicate if the event is wrapped in a CERTI message buffer.</property>
</doc>
