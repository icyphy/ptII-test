<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="HlaManager" class="org.hlacerti.lib.HlaManager">
  <description>
The Ptolemy-HLA co-simulation framework leverages two open source tools: &#10; Ptolemy II and HLA/CERTI. It must comply with both, Ptolemy and rules, &#10; in particular when dealing with data exchange and time advance.&#10; Three new components are added to Ptolemy:&#10; - a Hla Manager interface, implemented by the HlaManager class,&#10; - HlaPublisher actor and HlaSubscribe actor.&#10; This class implements a HLA Manager which, together with new classes&#10; CertiRtig, HlaPublisher, HlaSubscriber, HlaTimedEvent and MessageProcessing,&#10; allows a Ptolemy model to be a Federate in a HLA/CERTI Federation.&#10; &lt;p&gt;&#10; The High Level Architecture (HLA) [1][2] is a standard for distributed&#10; discrete-event simulation. A simulation in HLA is called an HLA&#10; Federation. A Federation is a collection of Federates, typically modeling&#10; components in a system, interconnected by a Run Time Infrastructure (RTI).&#10; &lt;/p&gt;&lt;p&gt;&#10; A Federation needs a FOM (Federation Object Model)&#10; that describes all data exchanged between the federates. The FOM follows the &#10; OMT meta-model and it is designed by the federation developer. It must contain &#10; all shared information (objects and interactions) as well the data encoding&#10; schemes. A subset of the FOM, along with other information about the data (if&#10; it is time-stamped, it the transportation is reliable or best-effort) is &#10; specified in a file called  Federation Execution Data (FED), a required input&#10; to the RTI [7]. It must also provide the name of the federation and the HLA &#10; version. The FED file does not indicate the data type. &#10; &lt;/p&gt;&lt;p&gt;&#10; The RTI used in the Ptolemy-HLA framework is CERTI.&#10; CERTI is an Open-Source middleware RTI compliant with HLA [NRS09] which&#10; manages every part of federation. It also ensures a real-time behavior of&#10; a federation execution. CERTI is implemented in C++ and bindings are&#10; provided as JCERTI for Java and PyHLA for Python. For more information see:&#10; &lt;a href=&quot;http://savannah.nongnu.org/projects/certi&quot; target=&quot;_top&quot;&gt;http://savannah.nongnu.org/projects/certi&lt;/a&gt;.&#10; &lt;/p&gt;&lt;p&gt;&#10; The &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; attribute handles the time synchronization between&#10; Ptolemy model time and HLA logical time by implementing the &lt;a href=&quot;../../../ptolemy/actor/TimeRegulator.xml&quot;&gt;ptolemy.actor.TimeRegulator&lt;/a&gt;&#10; interface. It also manages objects that implement interfaces provided by&#10; JCERTI related to the Federation, Declaration, Object, and Time management&#10; areas in HLA (each management area provides a set of services).&#10; &lt;/p&gt;&lt;p&gt;&#10; The &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; of a federate is responsible for the different phases&#10; of execution: &#10; - Create the federation execution (if it is the first federate lauched)&#10; - Join the federation&#10; - Deal with synchronization points&#10;  &lt;/p&gt;&lt;p&gt;&#10;  Before enter in the simulation loop (receive data, calculate and send new &#10;  values), the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; perform some initialization:&#10;  - Enable time constrain and time regulation: in the Ptolemy-HLA framework, &#10;    all federates are time-constrained and time-regulating, and all data are&#10;    time-stamped;&#10;  - Publish and subscribe to object classes defined in the FOM&#10;  - Register initial instances&#10;  The class name, the attribute name and the instance name are indicated&#10;  in actors HlaPublisher and HlaSubscriber. These actors provides information&#10;  for publish/subscribe attributes and register/discover instances using the&#10;  HLA services.&#10;   &lt;/p&gt;&lt;p&gt; &#10;  An &lt;a href=&quot;../../../org/hlacerti/lib/HlaPublisher.xml&quot;&gt;org.hlacerti.lib.HlaPublisher&lt;/a&gt; actor updates an attribute in an instance of such a class. &#10;  An &lt;a href=&quot;../../../org/hlacerti/lib/HlaSubscriber.xml&quot;&gt;org.hlacerti.lib.HlaSubscriber&lt;/a&gt; actor subscribes to such updates. More information in [3] and:&#10; &lt;/p&gt;&lt;p&gt;&#10; &lt;a href=&quot;http://savannah.nongnu.org/projects/certi&quot; target=&quot;_top&quot;&gt;http://savannah.nongnu.org/projects/certi&lt;/a&gt;&#10; &lt;/p&gt;&lt;p&gt;&#10; When entering in the simulation loop, the federate advances its logical time&#10; according to the events in its calendar queue. These events can be internal or&#10; external (coming from other federates). When the simulation ends, the federate&#10; resigns from the federation. When all federates have resigned, the last &#10; federate destroys the federation.&#10;  &lt;/p&gt;&lt;p&gt;&#10; To enable a Ptolemy model to be a Federate, it must contain an &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;.&#10; The parameters of this manager specify the name of the federate (this Ptolemy model),&#10; the FED file (a file with a .fed extension), and the following other parameters:&#10; &lt;/p&gt;&lt;p&gt;&#10; The parameter &lt;i&gt;timeManagementService&lt;/i&gt; specifies which time management &#10; the federate will use: &#10; - Next Event Request (NER) used for Event-Driven Simulation or &#10; - Time Advance Request (TAR) used for Timed-Step Simulation.&#10; When using NER, the logical time is advanced to the earliest event in the queue.&#10; When using TAR, the logical time is advanced in equal steps. &#10; &lt;b&gt;FIXME: Describe these.&lt;/b&gt;&#10; If TAR is selected, then parameter &lt;i&gt;hlaTimeStep&lt;/i&gt; (displayed as&#10; &quot;Time Step for TAR&quot;) specifies the time step taken by each time advance.&#10; &lt;/p&gt;&lt;p&gt;&#10; &lt;b&gt;FIXME: What do &lt;i&gt;isTimeConstrained&lt;/i&gt; and &lt;i&gt;isTimeRegulator&lt;/i&gt; mean?&#10; The following description tells me nothing. It just turns their names into sentences:&lt;/b&gt;&#10; &lt;/p&gt;&lt;p&gt;&#10; A federate can only advance its time if it is granted by the RTI. When this federate&#10; is constrained, this grant is computed by the RTI with the knowledge of the time&#10; advancements of the regulator federates, so that the conservative property of the&#10; distributed simulation is guaranteed between regulator and constrained federates.&#10; &lt;i&gt;istimeConstrained&lt;/i&gt; is used to specify time-constrained Federate and&#10; &lt;i&gt;istimeRegulator&lt;/i&gt; to specify time-regulator Federate. In the current version&#10; a Ptolemy federate is both time-constrained and time-regulating.&#10; &lt;/p&gt;&lt;p&gt;&#10; The parameter &lt;i&gt;hlaLookAHead&lt;/i&gt; is used for avoid deadlock [Fujimoto 1999].&#10; A time-regulating federate at logical time t with lookahead lah cannot send any&#10; event with a time-stamp t' &lt; t+lah.&#10; &lt;b&gt;FIXME: Meaning what?&lt;/b&gt;&#10; &lt;/p&gt;&lt;p&gt;&#10; The parameters &lt;i&gt;requireSynchronization&lt;/i&gt;, &lt;i&gt;synchronizationPointName&lt;/i&gt;&#10; and &lt;i&gt;isCreatorSyncPt&lt;/i&gt; are used to configure HLA synchronization point.&#10; This mechanism is usually used to synchronize the Federates, during their&#10; initialization, to avoid that Federates that only consume some HLA&#10; attributes finished their simulation before the other federates have started.&#10; &lt;i&gt;isCreatorSyncPt&lt;/i&gt; indicates if the Federate is the register of the&#10; synchronization point. Only one Federate can register the named synchronization&#10; point for the whole HLA Federation.&lt;/p&gt;&#10;&#10; &lt;p&gt;&lt;a href=&quot;../../../org/hlacerti/lib/HlaPublisher.xml&quot;&gt;org.hlacerti.lib.HlaPublisher&lt;/a&gt; and &lt;a href=&quot;../../../org/hlacerti/lib/HlaSubscriber.xml&quot;&gt;org.hlacerti.lib.HlaSubscriber&lt;/a&gt; actors are used to&#10; respectively publish and subscribe to HLA attributes. The name of those&#10; actors and their &lt;i&gt;classObjectHandle&lt;/i&gt; parameter have to match the&#10; identifier of the shared HLA attributes and their object class that they&#10; belong to, specified in the FOM (and indicated in the .fed file).&lt;/p&gt;&#10; &#10; &lt;p&gt;For a correct execution, the &lt;i&gt;CERTI_HOME&lt;/i&gt; environment variable has to&#10; be set. It could be set in the shell (by running one of the scripts provided&#10; by CERTI) where Vergil is executed, or as a parameter of the Ptolemy model&#10; or as a parameter of the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;:&lt;/p&gt;&#10; &lt;pre&gt;&#10; CERTI_HOME=&quot;/absolute/path/to/certi/&quot;&#10; &lt;/pre&gt;&#10;&lt;b&gt;FIXME: These 2 last ways where never implemented: parameter of the model&#10;   nor parameter of the HlaManager. Remove these sentences? &lt;/b&gt;&#10; &lt;p&gt;Otherwise, the current implementation is not able to find the CERTI&#10; environment, the RTIG binary and to perform its execution. See also&#10; the &lt;a href=&quot;../../../org/hlacerti/lib/CertiRtig.xml&quot;&gt;org.hlacerti.lib.CertiRtig&lt;/a&gt; class.&lt;/p&gt;&#10;&#10; &lt;p&gt;NOTE: For speeding up the simulation CERTI can be compiled with the option&#10; &quot;CERTI_USE_NULL_PRIME_MESSAGE_PROTOCOL&quot;&#10; &lt;/p&gt;&#10;&#10; &lt;p&gt;&lt;b&gt;References&lt;/b&gt;:&lt;/p&gt;&#10;&#10; &lt;p&gt;[1] Dpt. of Defense (DoD) Specifications, &quot;High Level Architecture Interface&#10;     Specification, Version 1.3&quot;, DOD/DMSO HLA IF 1.3, Tech. Rep., Apr 1998.&lt;/p&gt;&#10; &lt;p&gt;[2] IEEE, &quot;IEEE standard for modeling and simulation High Level Architecture&#10;     (HLA)&quot;, IEEE Std 1516-2010, vol. 18, pp. 1-38, 2010.&lt;/p&gt;&#10; &lt;p&gt;[3] D. of Defense (DoD) Specifications, &quot;High Level Architecture Object Model&#10;     Template, Version 1.3&quot;, DOD/DMSO OMT 1.3, Tech. Rep., Feb 1998.&lt;/p&gt;&#10; &lt;p&gt;[4] E. Noulard, J.-Y. Rousselot, and P. Siron, &quot;CERTI, an open source RTI,&#10;     why and how ?&quot;, Spring Simulation Interoperability Workshop, pp. 23-27,&#10;     Mar 2009.&lt;/p&gt;&#10; &lt;p&gt;[5] Y. Li, J. Cardoso, and P. Siron, &quot;A distributed Simulation Environment for&#10;     Cyber-Physical Systems&quot;, Sept 2015.&lt;/p&gt;&#10; &lt;p&gt;[6] J. Cardoso, and P. Siron, &quot;Ptolemy-HLA: a Cyber-Physical System Distributed&#10;     Simulation Framework&quot;, Festschrift Lee, Internal DISC report, 2017. &lt;/p&gt;&#10; &lt;p&gt;[7] Dpt. of Defense. High Level Architecture Run-Time Infrastructure &#10;     Programmer’s Guide RTI 1.3 Version 6 March 1999&lt;/p&gt;&#10;  &lt;p&gt;   [Fujimoto 1999] &lt;/p&gt;  </description>
  <author>Gilles Lasnier, Contributors: Patricia Derler, Edward A. Lee, David Come, Yanxuan LI</author>
  <version>$Id: HlaManager.java 214 2018-04-01 13:32:02Z j.cardoso $</version>
  <since>Ptolemy II 11.0</since>
  <Pt.ProposedRating>Yellow (glasnier)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (glasnier)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="federateName">Name of the Ptolemy Federate. This parameter must contain an&#10;  StringToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="federationName">Name of the federation. This parameter must contain an StringToken.</property>
    <!--ptolemy.data.expr.FileParameter-->
    <property name="fedFile">Path and name of the Federation Object Model (FOM) file (which should have&#10;  extension .fed).</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="hlaTimeUnit">Double value for representing how much is a unit of time in the simulation.&#10;  Has an impact on TAR/NER/RAV/UAV.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isCreator">Boolean value, 'true' if the Federate is the creator of the&#10;  synchronization point 'false' if not. This parameter must contain&#10;  an BooleanToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isTimeConstrained">Boolean value, 'true' if the Federate is declared time constrained&#10;  'false' if not. This parameter must contain an BooleanToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isTimeRegulator">Boolean value, 'true' if the Federate is declared time regulator&#10;  'false' if not. This parameter must contain an BooleanToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="hlaTimeStep">Value of the time step of the Federate. This parameter must contain&#10;  an DoubleToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="hlaLookAHead">Value of the lookahead of the HLA ptII federate. This parameter&#10;  must contain an DoubleToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="requireSynchronization">Boolean value, 'true' if the Federate is synchronised with other&#10;  Federates using a HLA synchronization point, 'false' if not. This&#10;  parameter must contain an BooleanToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="synchronizationPointName">Name of the synchronization point (if required). This parameter must&#10;  contain an StringToken.</property>
    <!--ptolemy.data.expr.ChoiceParameter-->
    <property name="timeManagementService">Choice of time advancement service (NER or exclusive TAR).</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="enableHlaReporter">Boolean value, 'true' if the generation of HLA reports is enabled&#10;  'false' if not. This parameter must contain an BooleanToken.</property>
    <!--ptolemy.data.expr.FileParameter-->
    <property name="hlaReportPath">Path and name of the HLA folder to store reports. This parameter&#10;  must contain a String.</property>
</doc>
