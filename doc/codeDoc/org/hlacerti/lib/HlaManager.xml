<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="HlaManager" class="org.hlacerti.lib.HlaManager">
  <description>
The Ptolemy-HLA co-simulation framework leverages two open source tools: &#10; Ptolemy II and HLA/CERTI to enable construction in Ptolemy II of an HLA&#10; federate. &#10; The High Level Architecture (HLA) [1][2] is a standard for distributed&#10; discrete-event simulation. A simulation in HLA is called an HLA&#10; federation. A federation is a collection of federates, typically modeling&#10; components in a system, interconnected by a Run Time Infrastructure (RTI).&#10; Each federate may be running on a different machine, and the RTI enables&#10; them to send each other time-stamped events and ensures that the time&#10; stamps respect DE semantics. Specifically, time advance in each of the&#10; federates is coordinated so that events never arrive with time stamps&#10; that are in the past with respect to the current time of the federate.&#10; In Ptolemy II, a federate is typically a DE model, although any timed&#10; model of computation can be used, in principle.&#10; &lt;/p&gt;&lt;p&gt;&#10; A Federation needs a FOM (Federation Object Model)&#10; that describes all data exchanged between the federates. The FOM follows the &#10; OMT meta-model and it is designed by the federation developer. It must contain &#10; all shared information (objects and interactions) as well the data encoding&#10; schemes. A subset of the FOM, along with other information about the data (if&#10; it is time-stamped, it the transportation is reliable or best-effort) is &#10; specified in a file called  Federation Execution Data (FED), a required input&#10; to the RTI [7]. It must also provide the name of the federation and the HLA &#10; version. The FED file does not indicate the data type. &#10; &lt;/p&gt;&lt;p&gt;&#10; The RTI used in the Ptolemy-HLA framework is CERTI.&#10; CERTI is an Open-Source middleware RTI compliant with HLA [NRS09] which&#10; manages every part of federation. It also ensures a real-time behavior of&#10; a federation execution. CERTI is implemented in C++ and bindings are&#10; provided as JCERTI for Java and PyHLA for Python. For more information see:&#10; &lt;a href=&quot;http://savannah.nongnu.org/projects/certi&quot; target=&quot;_top&quot;&gt;http://savannah.nongnu.org/projects/certi&lt;/a&gt;.&#10; &lt;/p&gt;&lt;p&gt;&#10; The &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; attribute handles the time synchronization between&#10; Ptolemy model time and HLA logical time by implementing the &lt;a href=&quot;../../../ptolemy/actor/TimeRegulator.xml&quot;&gt;ptolemy.actor.TimeRegulator&lt;/a&gt;&#10; interface. It also manages objects that implement interfaces provided by&#10; JCERTI related to the Federation, Declaration, Object, and Time management&#10; areas in HLA (each management area provides a set of services). Ownership&#10; management is not provided in the Ptolemy-HLA framework.&#10; &lt;/p&gt;&lt;p&gt;&#10; The &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; of a federate is responsible for the different phases&#10; of execution: &#10; - Create the federation execution (if it is the first federate lauched)&#10; - Join the federation&#10; - Deal with synchronization points&#10;  &lt;/p&gt;&lt;p&gt;&#10;  Before enter in the simulation loop (receive data, calculate and send new &#10;  values), the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt; perform some initialization:&#10;  - Enable time constrain and time regulation: in the Ptolemy-HLA framework, &#10;    all federates are time-constrained and time-regulating, and all data are&#10;    time-stamped;&#10;  - Publish and subscribe to attributes of object classes defined in the FOM&#10;  - Register initial class instances and discover class instances&#10;  The class name, the attribute name and the instance name are indicated&#10;  in actors &lt;a href=&quot;../../../org/hlacerti/lib/HlaPublisher.xml&quot;&gt;org.hlacerti.lib.HlaPublisher&lt;/a&gt; and &lt;a href=&quot;../../../org/hlacerti/lib/HlaSubscriber.xml&quot;&gt;org.hlacerti.lib.HlaSubscriber&lt;/a&gt;. &#10;   &lt;/p&gt;&lt;p&gt; &#10; When entering in the simulation loop, the federate advances its logical time&#10; according to the time management chosen by the user:&#10;  - Next Event Request (NER) used for Event-Driven Simulation or &#10;  - Time Advance Request (TAR) used for Timed-Step Simulation.&#10; When using NER, the logical time is advanced to the earliest event in the queue.&#10; When using TAR, the logical time is advanced in equal steps.&#10; The events in the calendar queue can be internal or external (coming from&#10; other federates). &#10; &lt;/p&gt;&lt;p&gt; When the simulation ends, the federate resigns from the federation.&#10; When all federates have resigned, the last federate destroys the federation.&#10;  &lt;/p&gt;&lt;p&gt;&#10; To enable a Ptolemy model to be a Federate, it must contain an &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;.&#10; The parameters of this manager specify the name of the federate (this Ptolemy model),&#10; the FED file (a file with a .fed extension), and the following other parameters:&#10; &lt;/p&gt;&lt;p&gt;&#10; The parameter &lt;i&gt;timeManagementService&lt;/i&gt; specifies which time management &#10; the federate will use: NER or TAR.&#10; If TAR is selected, the parameter &lt;i&gt;hlaTimeStep&lt;/i&gt; (displayed as&#10; &quot;Time Step for TAR&quot;) must specify the time step taken by each time advance.&#10; &lt;/p&gt;&lt;p&gt;&#10; A federate can only advance its time if it is granted by the RTI. When this federate&#10; is &lt;i&gt;constrained&lt;/i&gt;, this grant is computed by the RTI with the knowledge of the time&#10; advancements of the &lt;i&gt;regulating&lt;/i&gt; federates, so that the conservative property of the&#10; distributed simulation is guaranteed between regulator and constrained federates.&#10; &lt;i&gt;istimeConstrained&lt;/i&gt; is set to specify the federate is time-constrained Federate and&#10; &lt;i&gt;istimeRegulator&lt;/i&gt; is set to specify time-regulating Federate. In the current version&#10; a Ptolemy federate is both time-constrained and time-regulating. See [7], section 3.&#10; &lt;/p&gt;&lt;p&gt;&#10; The parameter &lt;i&gt;hlaLookAHead&lt;/i&gt; is used for avoiding deadlock [Fujimoto 1998].&#10; A time-regulating federate at logical time t with lookahead lah cannot send any&#10; event with a time-stamp t' &lt; t+lah.&#10; &lt;/p&gt;&lt;p&gt;&#10; FIXME: Update documentation:&#10; The parameters &lt;i&gt;requireSynchronization&lt;/i&gt;, &lt;i&gt;synchronizationPointName&lt;/i&gt;&#10; and &lt;i&gt;isCreatorSyncPt&lt;/i&gt; are used to configure HLA synchronization point.&#10; This mechanism is usually used to synchronize the Federates, during their&#10; initialization, to avoid that Federates that only consume some HLA&#10; attributes finished their simulation before the other federates have started.&#10; &lt;i&gt;isCreatorSyncPt&lt;/i&gt; indicates if the Federate is the register of the&#10; synchronization point. Only one Federate can register the named synchronization&#10; point for the whole HLA Federation. In the Ptolemy-HLA framework the federate&#10; that register the synchronization point must be the last one to be launched. &lt;/p&gt;&#10;&#10; &lt;p&gt;&lt;a href=&quot;../../../org/hlacerti/lib/HlaPublisher.xml&quot;&gt;org.hlacerti.lib.HlaPublisher&lt;/a&gt; and &lt;a href=&quot;../../../org/hlacerti/lib/HlaSubscriber.xml&quot;&gt;org.hlacerti.lib.HlaSubscriber&lt;/a&gt; actors provide the&#10; &lt;i&gt;classObjectName&lt;/i&gt; and &lt;i&gt;attributeName&lt;/i&gt; (as specified in the FOM and&#10; indicated in the FED file) and the &lt;i&gt;classInstanceName&lt;/i&gt; chosen by the user.&#10; This information is used by HLA services and callbacks. &lt;/p&gt;&#10; &#10; &lt;p&gt;For a correct execution, the &lt;i&gt;CERTI_HOME&lt;/i&gt; environment variable has to&#10; be set. It could be set in the shell (by running one of the scripts provided&#10; by CERTI) where Vergil is executed, or as a parameter of the Ptolemy model&#10; or as a parameter of the &lt;a href=&quot;../../../org/hlacerti/lib/HlaManager.xml&quot;&gt;org.hlacerti.lib.HlaManager&lt;/a&gt;:&lt;/p&gt;&#10; &lt;pre&gt;&#10; CERTI_HOME=&quot;/absolute/path/to/certi/&quot;&#10; &lt;/pre&gt;&#10;&lt;b&gt;FIXME: These 2 last ways where never implemented: parameter of the model&#10;   nor parameter of the HlaManager. Remove these sentences? &lt;/b&gt;&#10; &lt;p&gt;Otherwise, the current implementation is not able to find the CERTI&#10; environment, the RTIG binary and to perform its execution. See also&#10; the &lt;a href=&quot;../../../org/hlacerti/lib/CertiRtig.xml&quot;&gt;org.hlacerti.lib.CertiRtig&lt;/a&gt; class.&lt;/p&gt;&#10;&#10; &lt;p&gt;NOTE: For speeding up the simulation CERTI can be compiled with the option&#10; &quot;CERTI_USE_NULL_PRIME_MESSAGE_PROTOCOL&quot;&#10; &lt;/p&gt;&lt;b&gt;&#10; Although the rtig can be launched in a terminal before launching any Ptolemy&#10; federate, .... see &lt;a href=&quot;../../../org/hlacerti/lib/CertiRtig.xml&quot;&gt;org.hlacerti.lib.CertiRtig&lt;/a&gt;. &#10; &lt;b&gt;FIXME: explain why the choice of launch the rtig by the federate was made? &lt;/b&gt;&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; This attribute provides extensive debug output. Listen to the attribute to get&#10; the details. Some of these messages, primarily those related to the lifecycle of&#10; the interaction with the RTI, are also printed to standard out, even if you are&#10; listening to the attribute.&#10; &lt;/p&gt;&#10; &lt;p&gt;&lt;b&gt;References&lt;/b&gt;:&lt;/p&gt;&#10;&#10; &lt;p&gt;[1] Dpt. of Defense (DoD) Specifications, &quot;High Level Architecture Interface&#10;     Specification, Version 1.3&quot;, DOD/DMSO HLA IF 1.3, Tech. Rep., Apr 1998.&lt;/p&gt;&#10; &lt;p&gt;[2] IEEE, &quot;IEEE standard for modeling and simulation High Level Architecture&#10;     (HLA)&quot;, IEEE Std 1516-2010, vol. 18, pp. 1-38, 2010.&lt;/p&gt;&#10; &lt;p&gt;[3] D. of Defense (DoD) Specifications, &quot;High Level Architecture Object Model&#10;     Template, Version 1.3&quot;, DOD/DMSO OMT 1.3, Tech. Rep., Feb 1998.&lt;/p&gt;&#10; &lt;p&gt;[4] E. Noulard, J.-Y. Rousselot, and P. Siron, &quot;CERTI, an open source RTI,&#10;     why and how ?&quot;, Spring Simulation Interoperability Workshop, pp. 23-27,&#10;     Mar 2009.&lt;/p&gt;&#10; &lt;p&gt;[5] Y. Li, J. Cardoso, and P. Siron, &quot;A distributed Simulation Environment for&#10;     Cyber-Physical Systems&quot;, Sept 2015.&lt;/p&gt;&#10; &lt;p&gt;[6] J. Cardoso, and P. Siron, &quot;Ptolemy-HLA: a Cyber-Physical System Distributed&#10;     Simulation Framework&quot;, Festschrift Lee, Internal DISC report, 2017. &lt;/p&gt;&#10; &lt;p&gt;[7] Dpt. of Defense. High Level Architecture Run-Time Infrastructure &#10;     Programmer’s Guide RTI 1.3 Version 6, March 1999&lt;/p&gt;&#10; &lt;p&gt; [Fujimoto 1998] R. Fujimoto, &quot;Time Management in The High Level Architecture&quot;,&#10;     https://doi.org/10.1177/003754979807100604&lt;/p&gt;  </description>
  <author>Gilles Lasnier, Contributors: Patricia Derler, Edward A. Lee, David Come, Yanxuan LI</author>
  <version>$Id: HlaManager.java 214 2018-04-01 13:32:02Z j.cardoso $</version>
  <since>Ptolemy II 11.0</since>
  <Pt.ProposedRating>Yellow (glasnier)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (glasnier)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="federateName">Name of the Ptolemy Federate. This is a string that defaults&#10;  to &quot;Federate&quot;. Note that it is required that every federate in&#10;  a federation has to have a unique name.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="federationName">Name of the federation. This is a string that default to&#10;  &quot;HLAFederation&quot;.</property>
    <!--ptolemy.data.expr.FileParameter-->
    <property name="fedFile">Path and name of the Federation Execution Data (FED) file (which should have&#10;  extension .fed) on the local machine. This is not necessarily the file that&#10;  is used by the RTIG because the RTIG may not be running on the local machine.&#10;  It is expected that if these two files are on different machines, they are&#10;  nevertheless the same.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="fedFileOnRTIG">Name or path and name of the FED file on the machine that is running the&#10;  RTIG. Unfortunately, that file may not be the same as the FED file&#10;  on the local machine, pointed to by the fedFile parameter. By&#10;  default, this string is set to &quot;$fedFile&quot;, indicating that the default&#10;  value should match the value of the fedFile parameter. But note that&#10;  if the RTIG is running on a remote machine, this may need to be different&#10;  from the value of fedFile. Note also that the remote FED file and the&#10;  local FED file need to be the same, but there is no way to enforce that.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="hlaTimeUnit">Double value representing how many HLA time units there are in one&#10;  second. An HLA federation runs in arbitrary time units, where each&#10;  unit can represent any amount of time. This parameter gives an interpretation&#10;  of those time units and has units of HLA time units per second.&#10;  For example, if the HLA time unit is 1 millisecond, then the value of&#10;  this parameter should be 1,000. Ptolemy uses units of seconds, so&#10;  the value of this parameter affects the mapping from HLA time units to&#10;  time stamps in Ptolemy.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isTimeConstrained">A boolean indicating that time advance in this federate is regulated&#10;  by other federates in the federation. This defaults to true.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isTimeRegulator">A boolean indicating that this federate regulates the time advance of&#10;  other federates in the federation. This defaults to true.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="hlaTimeStep">Value of the time step of this Federate. This is a double that&#10;  defaults to 1.0. This is used only if you select TAR in the&#10;  timeManagementService parameter. The units here are HLA logical&#10;  time, not seconds. See the hlaTimeUnit parameter.&#10;  Normally, hlaTimeStep is larger than or equal to hlaLookAHead&#10;  when using TAR.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="hlaLookAHead">Value of the lookahead of this federate. This is a double that&#10;  default to 0.1. The units here are HLA logical logical&#10;  time, not seconds. See the hlaTimeUnit parameter.&#10;  Normally, hlaLookAhead is smaller than or equal to hlaTimeStep&#10;  when using TAR.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="killRTIG">If true, kill the HLA runtime infrastructure gateway (RTIG)&#10;  in wrapup that was created in preinitialize. If no RTIG was created&#10;  in preinitialize, then ignore this.  This is a boolean that&#10;  defaults to the value of launchRTIG.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="launchRTIG">If true, launch an HLA runtime infrastructure gateway (RTIG) in preinitialize.&#10;  This is a boolean that defaults to false.</property>
    <!--ptolemy.data.expr.ChoiceParameter-->
    <property name="timeManagementService">Choice of time advancement service. This is a string that is one of&#10;  &quot;Next Event Request (NER)&quot; or &quot;Time Advancement Request (TAR)&quot;.&#10;  If TAR is selected, then you need to also provide a time step&#10;  in the hlaTimeStep parameter.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="enableHlaReporter">A boolean indicating whether a log file should be written to the&#10;  location defined by the hlaReportPath parameter. This defaults to&#10;  false.</property>
    <!--ptolemy.data.expr.FileParameter-->
    <property name="hlaReportPath">Path and name of the folder to store log files that are generated&#10;  if the enableHlaReporter parameter is true. This is a string that&#10;  defaults to &quot;$HOME/HLATestResults&quot;.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="synchronizeStartTo">The name of a synchronization point to which this federate should&#10;  synchronize its start. If the name given here is the name of this&#10;  federate, then this federate registers itself as a&#10;  synchronization point to which other federates can synchronize&#10;  their start. The name of this federate will be the name of the&#10;  synchronization point, and this federate needs to be the last one&#10;  launched. If this parameter contains an empty string,&#10;  then this federate starts right away without waiting for any other&#10;  federate.  This parameter defaults to an empty string, indicating&#10;  that there is no synchronization.&#10;  &#10;  NOTE: All federates in a federation must use the same name here.&#10;  If two federates use two different names, then both will block&#10;  on initialization. If any one federate uses a blank here, then it&#10;  will block the execution of all other federates until it resigns&#10;  the federation after completing its execution.</property>
</doc>
