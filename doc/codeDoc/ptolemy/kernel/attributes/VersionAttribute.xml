<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="VersionAttribute" class="ptolemy.kernel.attributes.VersionAttribute">
  <description>
A nonpersistent attribute that identifies the version of an object.&#10; The value of the attribute contains a String version-id that represents&#10; the version.&#10; A version-id is a string with substrings separated by one of '.', '-' or '_'.&#10; The substrings may consist of any characters except space.  Version-ids can&#10; be compared against each other other with the compareTo() method.&#10;&#10; &lt;p&gt;The JNLP specification at&#10; &lt;a href=&quot;http://jcp.org/jsr/detail/056.jsp&quot;&gt;&lt;code&gt;http://jcp.org/jsr/detail/056.jsp&lt;/code&gt;&lt;/a&gt;&#10; gives the following syntax for version-ids:&lt;/p&gt;&#10; &lt;pre&gt;&#10; version-id ::= string ( separator string ) *&#10; string ::= char ( char ) *&#10; char ::= Any ASCII character except a space, a separator or a&#10; modifier&#10; separator ::= &quot;.&quot; | &quot;-&quot; | &quot;_&quot;&#10; &lt;/pre&gt;&#10; &lt;p&gt; Valid version-id include &quot;1.3&quot;, &quot;1.3.1&quot;, &quot;1.3-beta_01&quot;.&lt;/p&gt;&#10;&#10; &lt;p&gt;The JNLP specification includes version-strings, which are used for&#10; matching one or more version-ids in a fashion similar to wildcard&#10; matches within a regular expression.  At this time, this class does&#10; not implement version-strings.&lt;/p&gt;  </description>
  <author>Christopher Hylands</author>
  <version>$Id$</version>
  <since>Ptolemy II 2.0</since>
  <Pt.ProposedRating>Red (cxh)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.kernel.attributes.VersionAttribute-->
    <property name="CURRENT_VERSION">The VersionAttribute that contains the version of the Ptolemy II&#10;  release that is currently running.  This variable may be read&#10;  to take action if the assumed version does not match the current&#10;  version.  For example,&#10;&#10;  &lt;pre&gt;&#10;  VersionAttribute assumedVersion = ...;&#10;  if (VersionAttribute.CURRENT_VERSION.isLessThan(assumedVersion)) {&#10;      throw new IllegalActionException(&quot;You need to upgrade!&quot;);&#10;  }&#10;  &lt;/pre&gt;&#10;  &lt;p&gt;&#10;  Similarly, this variable may be used to change the Ptolemy II&#10;  functionality depending on the version number:&lt;/p&gt;&#10;  &lt;pre&gt;&#10;  if (VersionAttribute.CURRENT_VERSION.compareTo(&#10;         new VersionAttribute(&quot;2.0&quot;)) &amp;ge; 0 ) {&#10;      // Perform some operation if the current version is&#10;      // Ptolemy II 2.0 or later.&#10;  }&#10;  &lt;/pre&gt;</property>
</doc>
