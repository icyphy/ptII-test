<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="GiottoTimingManager" class="ptolemy.domains.giotto.kernel.GiottoTimingManager">
  <description>
An attribute that varies the WCET values of actors and throws a model&#10; error if the sum of the execution times is larger than the sum of the&#10; worst case execution times.&#10;&#10; &lt;p&gt; This attribute helps the user to manage and  mitigate&#10; timing errors in a specification that uses timing but has no&#10; mechanisms in its specification for timing error handling. In&#10; this context a timing error occurs if the actor takes more than&#10; the specified WCET to execute.&#10;&#10; &lt;p&gt; The presence of the timing manager indicates a desire to&#10; incorporate execution timing as well as error handling&#10; into a Giotto specification.&#10;&#10; &lt;p&gt; This attribute is a decorator that adds a parameter to each actor at&#10; the current level.  The parameter is named &lt;i&gt;WCET&lt;/i&gt;, which is the Worst&#10; Case Execution Time (WCET) for the actor whose initial default value is 0.0.&#10; This indicates instantaneous execution, however, for each actor this&#10; parameter can also be modified by the user with information gained&#10; from an external WCET analysis tool.&#10;&#10; &lt;p&gt; This class simulates timing overruns by varying the execution time&#10; of each actor. It currently uses the java.util.Random pseudo random number&#10; generator to generate a random execution time in the range [0,2*&lt;i&gt;WCET&lt;/i&gt;]&#10; for each iteration of each actor. The random number generator can be seeded&#10; by the &lt;i&gt;seed&lt;/i&gt; parameter. The default value of the seed&#10; is 0L interpreted as not having a seed. The user also has the option to reset to&#10; the seed on each run by selecting the &lt;i&gt;resetOnEachRun&lt;/i&gt; parameter.&#10; A future modification could include adding a parameter to have&#10; the user specify what probability distribution they wish to use.&#10;&#10; &lt;p&gt; This attribute checks for two types of errors. First, it does a static check of&#10; (a) the sum of the worst case execution times for the actors and compares&#10; (a) to the &lt;a href=&quot;../../../../ptolemy/domains/giotto/kernel/GiottoDirector.xml#period&quot;&gt;period&lt;/a&gt;&#10; of the Giotto Director. If (a) is larger than the director&#10; period, then the attribute throws an exception notifying the user of the discrepancy&#10; and does not execute the model. Second, during execution the attribute randomly varies&#10; the execution time of the actors. The attribute then compares (b) the sum of the&#10; actors execution times to (a) the sum of the actors worst case execution&#10; times. If (a) &amp;lt; (b) then the attribute calls&#10; &lt;a href=&quot;../../../../ptolemy/kernel/util/NamedObj.html#handleModelError&quot;&gt;handleModelError(NamedObj, IllegalActionException)&lt;/a&gt;,&#10;  which throws a model error .&#10;&#10; &lt;p&gt; A model error is an exception that is passed up the containment&#10; hierarchy rather than being immediately thrown. Any container&#10; in the containment hierarchy may choose to handle the error.&#10; By default, containers will pass and delegate the error to their&#10; container, if they have one, and throw an exception if they&#10; don't. But some containers might do more with the error.&lt;/p&gt;&#10;&#10; &lt;p&gt;The attribute can be instantiated by instantiating an attribute of type&#10; &lt;a href=&quot;../../../../ptolemy/domains/giotto/kernel/GiottoTimingManager.xml&quot;&gt;ptolemy.domains.giotto.kernel.GiottoTimingManager&lt;/a&gt;.&lt;/p&gt;  </description>
  <author>Shanna-Shaye Forbes. Based on the MonitorReceiverContents.java&#10; created by Edward A. Lee and RandomSource.java by Edward A. Lee, Steve Neuendorffer, Elaine Cheong</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Red (sssf)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (sssf)</Pt.AcceptedRating>
    <!--ptolemy.actor.parameters.SharedParameter-->
    <property name="resetOnEachRun">If true, this parameter specifies that the random number&#10;  generator should be reset on each run of the model (in&#10;  the initialize() method). It is a boolean that defaults&#10;  to false. This is a shared parameter, meaning that changing&#10;  it somewhere in the model causes it to be changed everywhere&#10;  in the model.</property>
    <!--ptolemy.actor.parameters.SharedParameter-->
    <property name="seed">The seed that controls the random number generation.&#10;  This is a shared parameter, meaning that all instances of&#10;  RandomSource or derived classes in the same model share the&#10;  same value.&#10;  A seed of zero is interpreted to mean that no seed is specified,&#10;  which means that each execution of the model could result in&#10;  distinct data. For the value 0, the seed is set to&#10;  System.currentTimeMillis() + hashCode(), which means that&#10;  with extremely high probability, two distinct actors will have&#10;  distinct seeds.  However, current time may not have enough&#10;  resolution to ensure that two subsequent executions of the&#10;  same model have distinct seeds. For a value other than zero,&#10;  the seed is set to that value plus the hashCode() of the&#10;  full name of the actor. This means that with high probability,&#10;  two distinct actors will have distinct, but repeatable seeds.&#10;&#10;  This parameter contains a LongToken, initially with value 0.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="probabilityDistribution">The value that controls the type of the probability distribution&#10;  used for random number generation.&#10;  The probability distribution defaults to none, which is interpreted&#10;  as an equal distribution of numbers between 0 and 1.</property>
</doc>
