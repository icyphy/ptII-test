<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ContentionAlarm" class="ptolemy.domains.csp.demo.BusContention.ContentionAlarm">
  <description>
A ContentionAlarm is a CSP actor that creates an output only after&#10; timed deadlock has been reached by all other CSP actors in the&#10; containing composite actor. A ContentionAlarm has one input and&#10; one output port as well as three &quot;informal&quot; states. During the&#10; fire() method, the actor is enabled to cycle through each of the&#10; three states.&#10;&#10; In state one, the ContentionAlarm attempts to receive a token through&#10; its input port. Once a token has been received, the actor enters state&#10; two and calls the _waitForDeadlock() method that it inherits from&#10; CSPActor. This method means that the actor becomes time delayed and&#10; will not continue until all other actors in the composite actor are&#10; either blocked or time delayed. Once _waitForDeadlock() returns, the&#10; actor enters state three and sends a token through its output port.&#10;&#10; A useful application of ContentionAlarm is to notify other actors&#10; if there are multiple contenders for a given resource at a given&#10; time. Because of the semantics of _waitForDeadlock(), ContentionAlarm&#10; will not &quot;wake up&quot; until all contenders have attempted to access a&#10; particular resource.&#10;&#10; In addition to the time delay oriented semantics of ContentionAlarm,&#10; it can also notify an ExecEventListener as this actor jumps between&#10; its three states. Such notification is enabled by adding an&#10; ExecEventListener to this actor's listener list via the addListeners()&#10; method. Listeners can be removed via the removeListeners() method.&#10; ExecEventListeners are currently implemented to serve as conduits&#10; between Ptolemy II and the Diva graphical user interface.  </description>
  <author>John S. Davis II</author>
  <version>$Id$</version>
  <since>Ptolemy II 0.3</since>
  <Pt.ProposedRating>Red (davisj)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="input">The input port.  The type of this port is BaseType.GENERAL.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port.  The type of this port is BaseType.GENERAL.</port>
</doc>
