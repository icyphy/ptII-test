<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="PowerLossChannel" class="ptolemy.domains.wireless.lib.PowerLossChannel">
  <description>
This is a model of a wireless channel with a specified power propagation&#10; formula. The power propagation is given as an expression that is evaluated&#10; and then multiplied by the power field of the transmit properties before&#10; delivery to the receiver. For convenience, a variable named &quot;distance&quot;&#10; is available and equal to the distance between the transmitter and the&#10; receiver when the power propagation formula is evaluated.  Thus, the&#10; expression can depend on this distance. The value of the power field should&#10; be interpreted as power at the transmitter but power density at the receiver.&#10; A receiver may multiply the power density with its efficiency and an&#10; area(typically the antenna area). A receiver can then use the resulting&#10; power to compare against a detectable threshold, or to determine&#10; signal-to-interference ratio, for example.&#10; &lt;p&gt;&#10; The default value of &lt;i&gt;powerPropagationFactor&lt;/i&gt; is&#10; &lt;pre&gt;&#10; 1.0 / (4 * PI * distance * distance).&#10; &lt;/pre&gt;&#10; This assumes that the transmit power is uniformly distributed&#10; on a sphere of radius &lt;i&gt;distance&lt;/i&gt;. The result of multiplying&#10; this by a transmit power is a power density (power per unit area).&#10; The receiver should multiply this power density by the area of the&#10; sensor it uses to capture the energy (such as antenna area) and&#10; also an efficiency factor which represents how effectively it capture&#10; the energy.&#10; &lt;p&gt;&#10; The power field of the transmit properties can be supplied by&#10; the transmitter as a record with a &lt;i&gt;power&lt;/i&gt; field of type double.&#10; The default value provided by this channel is Infinity, which when&#10; multiplied by any positive constant will yield Infinity, which&#10; presumably will be above any threshold. Thus, the default behavior&#10; is to encounter no power loss and no limits to communication due&#10; to power.&#10; &lt;p&gt;&#10; In addition, this channel can have a specified limited transmission&#10; range. If a transmission range less than Infinity (the default)&#10; is specified, then receivers outside the specified range will&#10; not be notified of transmission, irrespective of power loss.&#10; The transmission range can be specified in one of two ways.&#10; Either it is the value of the &lt;i&gt;range&lt;/i&gt; field in the&#10; &lt;i&gt;defaultProperties&lt;/i&gt; parameter (a record) of this&#10; channel, or it is provided by the transmitter on each call to&#10; transmit() as a property argument.  To use the latter mechanism,&#10; it is necessary that the property token be an instance of RecordToken&#10; with a field named &quot;range&quot; that can be converted to a double&#10; (i.e., it can be a double, an int, or a byte).&#10; The default value for &lt;i&gt;range&lt;/i&gt; is Infinity, which&#10; indicates that by default, there is no range limit.&#10; &lt;p&gt;&#10; Any receiver that is within the specified range when transmit()&#10; is called will receive the transmission, unless the &lt;i&gt;lossProbability&lt;/i&gt;&#10; parameter is set to greater than zero.&#10;&#10; &lt;p&gt;  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 4.0</since>
  <Pt.ProposedRating>Green (cxh)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (cxh)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="powerPropagationFactor">The default formula for the power loss factor.&#10;  This value, when multiplied by the transmit power, yields&#10;  the power density (per unit area) at a receiver. It can&#10;  be an expression that depends on a variable &quot;distance,&quot;&#10;  which has the value of the distance between a transmitter&#10;  and receiver when this parameter is evaluated.  This is&#10;  a double that defaults to&#10;  &quot;1.0 / (distance * distance))&quot;.</property>
</doc>
