<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="NodeRandomizer" class="ptolemy.domains.wireless.lib.NodeRandomizer">
  <description>
This actor, when fired, randomizes the locations of all actors in the&#10; same container that contain an attribute named &quot;randomize&quot; with value&#10; true.  It can also optionally perform the randomization in its&#10; initialize() method. In both cases, the randomization is&#10; performed in a change request, so it will take effect after the&#10; current iteration.&#10; &lt;p&gt;&#10; This actor assumes that the location is represented in an object&#10; of class Locatable (which is an attribute that implements Settable)&#10; with name &quot;_location&quot;.  This is how Vergil represents locations.&#10; &lt;p&gt;&#10; The &lt;i&gt;range&lt;/i&gt; parameter is an array of arrays giving the range&#10; of possible values for each dimension of the location.  For example,&#10; if the location is in two dimensions, then range has the form&#10; {{&lt;i&gt;x1&lt;/i&gt;, &lt;i&gt;x2&lt;/i&gt;}, {&lt;i&gt;y1&lt;/i&gt;, &lt;i&gt;y2&lt;/i&gt;}},&#10; indicating that the X value of the location is uniformly&#10; distributed between &lt;i&gt;x1&lt;/i&gt; and &lt;i&gt;x2&lt;/i&gt;, and that the Y value is&#10; uniformly distributed between &lt;i&gt;y1&lt;/i&gt; and &lt;i&gt;y2&lt;/i&gt;.&#10; &lt;p&gt;&#10; If the &lt;i&gt;resetOnEachRun&lt;/i&gt; parameter is true (the default value),&#10; then each run resets the random number generator. If the seed is&#10; non-zero, then this makes each run identical.  This is useful for&#10; constructing tests. If the seed is zero, then a new seed is generated&#10; on each run (using the current time and the hash code of this object).&#10; &lt;p&gt;&#10; The &lt;i&gt;maxPrecision&lt;/i&gt; parameter specifies the number of digits to be used&#10; when generating a random location; results are rounded to this precision.&#10; If the value is 0 (the default value), then use the maximum precision allowed by&#10; the Java double type and the random number generator.  </description>
  <author>Sanjeev Kohli, N. Vinay Krishnan, Cheng Tien Ee, Edward Lee, Xiaojun Liu and Elaine Cheong.</author>
  <version>$Id$</version>
  <since>Ptolemy II 4.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (sanjeev)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="trigger">A trigger input to cause this actor to fire in domains&#10;  that require a trigger.  This has undeclared type.</port>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isPersistent">If the isPersistent parameter is false, then the MoMLChangeRequest&#10;  that places the nodes will not be persistent so the user will not&#10;  be prompted to save the model upon closing.  Models in the&#10;  test suite might want to have this parameter set to false so&#10;  as to avoid a dialog asking if the user wants to save the&#10;  model.  The default is a boolean with a value of false,&#10;  indicating that change will not be persistent.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="maxPrecision">The maximum precision (number of digits to be used, results&#10;  are rounded to this precision) of the generated locations.  If&#10;  equal to 0, the resulting random locations will not be&#10;  rounded.  The default value is 0.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="randomizeInInitialize">If set to true, randomly distribute nodes in initialize().&#10;  The default value is false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="range">The range of values for locations to be set when randomizing.&#10;  This is an array of arrays that defaults to&#10;  {{0.0, 500.0}, {0.0, 500.0}},&#10;  indicating that the X and Y values are uniformly distributed&#10;  between 0.0 and 500.0.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="resetOnEachRun">If set to true, reset the random number generator with the&#10;  seed value each time preinitialize() is invoked.  The default&#10;  value is true, which means that if the seed value is non-zero,&#10;  the node layout will be the same each time this model is run.&#10;  When the value is false and the seed value is non-zero, the&#10;  random number generator will not be reset, and the node layout&#10;  will be different each time this model is run within the same&#10;  session (within the lifetime of the JVM), although the overall&#10;  pattern of node layouts will be the same across different JVM&#10;  sessions.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="seed">The seed that controls the random number generation to use when&#10;  randomizing.&#10;  A seed of zero is interpreted to mean that no seed is specified,&#10;  which means that each execution of the model could result in&#10;  distinct data. For the value 0, the seed is set to&#10;  System.currentTimeMillis() + hashCode(), which means that&#10;  with extremely high probability, two distinct actors will have&#10;  distinct seeds.  However, current time may not have enough&#10;  resolution to ensure that two subsequent executions of the&#10;  same model have distinct seeds.&#10;  This parameter contains a LongToken, initially with value 0.</property>
</doc>
