<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="SysMLSequentialDirector" class="ptolemy.domains.sysml.kernel.SysMLSequentialDirector">
  <description>
&lt;p&gt;&#10; Sequential version of a SysML director. This version is inspired by a&#10; subset of the semantics of IBM Rational's Rhapsody SysML tool.&#10; In this MoC, all actors execute in the same thread.&#10; Inputs provided to an input port (by another actor) are&#10; put into a single queue managed by this director.&#10; This director executes by first initializing all actors&#10; (which may cause them to place events on the queue and/or&#10; to request firings at future times, &quot;timeouts&quot;).&#10; Then, in each iteration, this director retrieves one event&#10; from the queue, offers it to the destination actor as&#10; an input, and fires that destination actor. That actor&#10; may put events on the event queue and/or request firings&#10; at future times. The director continues&#10; doing this until there are no more events to be&#10; processed at the current time.&#10; At that point, it allows time to advance, and first all&#10; actors that whose timeouts match the time advance, in the&#10; same order in which they asserted those timeouts (in previous&#10; firings). Those firings may again place events in the event queue,&#10; so this director will again fire actors until the event queue&#10; is empty.&#10; &lt;p&gt;&#10; Ports that are marked as flow ports (which contain an attribute&#10; named &quot;flow&quot; with value &quot;true&quot;) are treated specially.&#10; First, the value on such ports is persistent. It does not&#10; disappear after being read, unlike the events that arrive&#10; on standard ports. Second, when a new value is sent to a flow&#10; port, the new value is made immediately available to the&#10; destination actor, and a &quot;change event&quot; is placed on the event&#10; queue. The change event ensures that the actor is notified of&#10; the changed value, but the actor may actually notice the change&#10; value before it processes the change event, if there are already&#10; other events in the queue destined for that actor.&#10; &lt;p&gt;&#10; This director is related to the DE director, with some key&#10; differences. First, it handles only one event from the&#10; event queue at a time. Second, the dependencies between&#10; actors are ignored. Third, it supports &quot;flow ports,&quot;&#10; which have persistent value, and &quot;change events,&quot; which&#10; indicate to an actor that the value on a flow port has&#10; changed.&#10; &lt;p&gt;&#10; Unlike the DE director, the order in which actors are&#10; initialized affects the execution because it affects&#10; the initial order in which events are placed on the event&#10; queue. After that, if the actors are deterministic,&#10; then the execution is deterministic.  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Red (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (eal)</Pt.AcceptedRating>
</doc>
