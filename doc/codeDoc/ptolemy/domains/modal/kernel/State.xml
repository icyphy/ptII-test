<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="State" class="ptolemy.domains.modal.kernel.State">
  <description>
A State has two ports: one for linking incoming transitions, the other for&#10; outgoing transitions. When the FSMActor containing a state is the mode&#10; controller of a modal model, the state can be refined by one or more&#10; instances of TypedActor. The refinements must have the same container&#10; as the FSMActor. During execution of a modal model, only the mode&#10; controller and the refinements of the current state of the mode&#10; controller react to input to the modal model and produce&#10; output. The outgoing transitions from a state are either preemptive or&#10; non-preemptive. When a modal model is fired, if a preemptive transition&#10; from the current state of the mode controller is chosen, the refinements of&#10; the current state are not fired. Otherwise the refinements are fired before&#10; choosing a non-preemptive transition.  </description>
  <author>Xiaojun Liu</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Yellow (liuxj)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (kienhuis)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isFinalState">An indicator of whether this state is a final state.&#10;  This is a boolean that defaults to false. Setting it to true&#10;  will cause the containing FSMActor to return false from its&#10;  postfire() method, which indicates to the director that the&#10;  FSMActor should not be fired again.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isInitialState">An indicator of whether this state is the initial state.&#10;  This is a boolean that defaults to false, unless this state&#10;  is the only one in the container, in which case it defaults&#10;  to true. Setting it to true&#10;  will cause this parameter to become false for whatever&#10;  other state is currently the initial state in the same&#10;  container.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="saveRefinementsInConfigurer">A boolean attribute to decide refinements of this state should be&#10;  exported as configurations of this state or not.</property>
    <!--ptolemy.kernel.util.StringAttribute-->
    <property name="refinementName">Attribute specifying one or more names of refinements. The&#10;  refinements must be instances of TypedActor and have the same&#10;  container as the FSMActor containing this state, otherwise&#10;  an exception will be thrown when getRefinement() is called.&#10;  Usually, the refinement is a single name. However, if a&#10;  comma-separated list of names is provided, then all the specified&#10;  refinements will be executed.&#10;  This attribute has a null expression or a null string as&#10;  expression when the state is not refined.</property>
</doc>
