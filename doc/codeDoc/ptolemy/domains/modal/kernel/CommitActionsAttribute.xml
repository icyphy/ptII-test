<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="CommitActionsAttribute" class="ptolemy.domains.modal.kernel.CommitActionsAttribute">
  <description>
An action that changes the state of the system. Typical commit actions set&#10; variables either in the containing FSMActor or in a state refinement.&#10; This action is contained by a transition,&#10; and is evaluated whenever that transition is taken.  The evaluation&#10; is done in the postfire() method of the FSMActor that contains the&#10; transition (hereafter called &quot;the FSM actor&quot;).&#10; To specify an action that is executed earlier, in the fire()&#10; method, when the transition is enabled rather than taken,&#10; use the class OutputActionsAttribute.&#10; &lt;p&gt;&#10; The value of this attribute is a semicolon separated list of commands,&#10; where each command gives a destination and a value.&#10; The actions are given by calling setExpression() with&#10; a string of the form:&#10; &lt;pre&gt;&#10; &lt;i&gt;command&lt;/i&gt;; &lt;i&gt;command&lt;/i&gt;; ...&#10; &lt;/pre&gt;&#10; where each &lt;i&gt;command&lt;/i&gt; has the form:&#10; &lt;pre&gt;&#10; &lt;i&gt;destination&lt;/i&gt; = &lt;i&gt;expression&lt;/i&gt;&#10; &lt;/pre&gt;&#10; where &lt;i&gt;destination&lt;/i&gt; is &lt;i&gt;variableName&lt;/i&gt;,&#10; where &lt;i&gt;variableName&lt;/i&gt; is either a variable or parameter of&#10; the FSM actor, or a variable or parameter of a refinement state.&#10; To give a variable of a refinement state, use a dotted name,&#10; as follows:&#10; &lt;pre&gt;&#10; &lt;i&gt;refinementStateName&lt;/i&gt;.&lt;i&gt;variableName&lt;/i&gt;&#10; &lt;/pre&gt;&#10; &lt;p&gt;&#10; The &lt;i&gt;expression&lt;/i&gt; is a string giving an expression in the usual&#10; Ptolemy II expression language.  The expression may include references&#10; to variables and parameters contained by the FSM actor.&#10; &lt;p&gt;&#10; The &lt;i&gt;destination&lt;/i&gt; can also be a port, however, this is discouraged.&#10; Commit actions are not executed until postfire(), and the Ptolemy II&#10; abstract semantics requires that outputs be produced in fire().&#10; Nonetheless, this is supported. In this case, the &lt;i&gt;destination&lt;/i&gt; is&#10; either&#10; &lt;pre&gt;&#10; &lt;i&gt;portName&lt;/i&gt;&#10; &lt;/pre&gt;&#10; or&#10; &lt;pre&gt;&#10; &lt;i&gt;portName&lt;/i&gt;(&lt;i&gt;channelNumber&lt;/i&gt;)&#10; &lt;/pre&gt;&#10; Here, &lt;i&gt;portName&lt;/i&gt; is the name of a port of the FSM actor,&#10; If no &lt;i&gt;channelNumber&lt;/i&gt; is given, then the value&#10; is broadcast to all channels of the port.&#10; If destination name is given where there is both a port and a variable&#10; with that name, then the port will be used.  </description>
  <author>Xiaojun Liu and Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (eal)</Pt.AcceptedRating>
</doc>
