<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="MetroIIDEDirector" class="ptolemy.domains.metroII.kernel.MetroIIDEDirector">
  <description>
MetroIIDEDirector is a Discrete Event (DE) director that adapts to MetroII&#10; semantics. This MoC is mainly used to design the functional model, in which&#10; some actors can be mapped to an architectural models. This allows users to&#10; explore choices about how the model can be implemented.&#10;&#10; &lt;p&gt;&#10; In DE director, events are totally ordered and executed. In&#10; MetroIIDEDirector, these events are called Ptolemy events that are still&#10; totally ordered. But the execution of Ptolemy events has some variances.&#10; Typically, a Ptolemy event is associated with a fire() action of an actor.&#10; Executing the Ptolemy event triggers the firing of the actor. In&#10; MetroIIDEDirector, the firing has two variances, depending on the types of&#10; the actor:&lt;/p&gt;&#10; &lt;ol&gt;&#10; &lt;li&gt;If the actor is a normal Ptolemy actor, the execution of the event&#10; instantly triggers fire() of the actor.&lt;/li&gt;&#10; &lt;li&gt;If the actor is an actor with a MetroII wrapper (@see BlockingFire or @see&#10; ResumableFire), the execution of the event will trigger a MetroII event to be&#10; PROPOSED. The firing will not be executed until the MetroII event is&#10; NOTIFIED.&lt;/li&gt;&#10; &lt;/ol&gt;&#10; &lt;p&gt;A MetroII actor is a Ptolemy actor that implements GetFirable interface,&#10; which includes MetroIICompositeActor. To understand MetroII event and its&#10; states (e.g. PROPOSED, WAITING, NOTIFIED), please @see MetroIIDirector.&#10; &lt;/p&gt;&#10;&#10; &lt;p&gt;&#10; By using a MetroII actor under the MetroIIDEDirector, the user understands&#10; the firing of the MetroII actor might be delayed because the scheduling is&#10; not solely determined by the MetroIIDEDirector but also determined by&#10; MetroIIDirector on the upper level and the architectural model which the&#10; MetroII actor is mapped onto. This introduces some non-determinisms. But&#10; these non-determinisms are desirable and can be used to optimize the&#10; architectures.&#10; &lt;/p&gt;&#10;&#10; &lt;p&gt;&#10; It is highly recommend not to place MetroIIDEDirector in a&#10; MetroIICompositeActor under another MetroIIDEDirector because there would be&#10; a semantic conflict if the enclosed MetroIIDEDirector directs a normal&#10; Ptolemy actor.&#10; &lt;/p&gt;  </description>
  <author>Liangpeng Guo</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Red (glp)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (glp)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="printTrace">True if the trace information is printed.</property>
</doc>
