<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="Event" class="ptolemy.domains.ptera.kernel.Event">
  <description>
A Ptera event is contained by a Ptera controller in a Ptera modal model.&#10; Each event can be placed in the Ptera controller's event queue when it is&#10; scheduled. When the model time reaches the time of the scheduled event, the&#10; event is removed from the event queue and is processed. Actions can be&#10; associated with each event, so that processing an event causes those actions to&#10; be executed.&#10; &lt;p&gt;&#10; An event may schedule another event after a 0 or greater delay of model time.&#10; This scheduling relation may be guarded by a Boolean expression. When an event&#10; schedules another, processing the first one causes the second one to be placed&#10; in the same Ptera controller's event queue. An event may also cancel another&#10; event that was previously placed in the same Ptera controller's event queue but&#10; has not been processed yet.&#10; &lt;p&gt;&#10; If the &lt;code&gt;fireOnInput&lt;/code&gt; parameter of an event is set to true, then the&#10; event is also placed in its Ptera controller's input event queue when&#10; scheduled. When the Ptera controller receives an input at any of its input&#10; ports, all the events in its input event queue are removed and processed. Those&#10; events can use the value of that input in their guards or actions.&#10; &lt;p&gt;&#10; An event may also define 0 or more formal parameters. When it is scheduled, on&#10; the scheduling relation, values to those parameters must be provided.&#10; &lt;p&gt;&#10; When an event is processed, if there are actions defined for it, then those&#10; actions are executed. This happens before the refinements of the event is&#10; fired, if any.&#10; &lt;p&gt;&#10; One or more variable names can be listed in the &lt;code&gt;monitoredVariables&lt;/code&gt;&#10; parameter, separated by commas. If any such variable names are specified, when&#10; the model is executed, changes on those variables are captured by the event.&#10; This means, if the event is scheduled in the Ptera controller's event queue and&#10; a change is made on the variable (e.g., by the user or by actors such as &lt;a href=&quot;../../../../ptolemy/actor/lib/SetVariable.xml&quot;&gt;ptolemy.actor.lib.SetVariable&lt;/a&gt;), then the event is processed even though its&#10; scheduled time has not arrive yet.&#10; &lt;p&gt;&#10; This class extends the &lt;a href=&quot;../../../../ptolemy/domains/modal/kernel/State.xml&quot;&gt;ptolemy.domains.modal.kernel.State&lt;/a&gt; class in FSM, but it implements a model of&#10; computation whose semantics is completely different from FSM. Extending from&#10; FSM only because this makes it possible to reuse the user interface implemented&#10; for FSM.  </description>
  <author>Thomas Huining Feng</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Yellow (tfeng)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (tfeng)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isEndingEvent">A Boolean parameter that determines whether the event is the ending of a&#10;  submodel, which means the outgoing scheduling relations from the event&#10;  that the submodel is associated with should be evaluated. The difference&#10;  between an ending event and a final event is that the latter also clears&#10;  the submodel's local event queue, whereas the former doesn't. It just&#10;  triggers the outgoing scheduling relations.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isFinalEvent">A Boolean parameter to specify whether this event is a final event.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="isInitialEvent">A Boolean parameter to specify whether this event is an initial&#10;    event.</property>
    <!--ptolemy.domains.ptera.kernel.ParametersAttribute-->
    <property name="parameters">A list of formal parameters.</property>
    <!--ptolemy.domains.ptera.kernel.ActionsAttribute-->
    <property name="actions">The actions for this event.</property>
</doc>
