<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ContinuousTimeDelay" class="ptolemy.domains.continuous.lib.ContinuousTimeDelay">
  <description>
Delay the input by a specified amount of time.&#10;&#10; &lt;p&gt;This actor is designed&#10; to be used in timed domains such as DE and Continuous. It can also be used&#10; in other domains, such as SR and SDF, but this will only be useful if the&#10; delay value is a multiple of the period of those directors. The amount&#10; of the delay is required to be non-negative and has a default value 1.0.&#10; The input and output types are unconstrained, except that the output type&#10; must be the same as that of the input.&#10; &lt;p&gt;&#10; This actor keeps a local FIFO queue of all input events that may be requested&#10; by the director; an event expires and is removed from this queue if its&#10; timestamp is older than the current time less the delay. The behavior of this&#10; actor on each firing is to read a token from the input port (if present) and&#10; generates an output that is either equal to or an approximation of the delayed&#10; input signal. Output is absent if and only if no initial value is given and&#10; the actor is fired before input is received, or before the transient delay&#10; period has passed (i.e. model time is less than delay time).&#10; &lt;p&gt;&#10; Output is generated by the fire() method, and inputs are processed in postFire().&#10; &lt;p&gt;&#10; Occasionally, this actor is useful with the&#10; delay parameter set to 0.0.  The time stamp of the output will&#10; equal that of the input, but there is a &quot;microstep&quot; delay.&#10; The continuous domain in Ptolemy II has a &quot;super dense&quot; model&#10; of time, meaning that a signal from one actor to another can&#10; contain multiple events with the same time stamp. These events&#10; are &quot;simultaneous,&quot; but nonetheless&#10; have a well-defined sequential ordering determined by the order&#10; in which they are produced.&#10; If \textit{delay} is 0.0, then the actor does not generate output&#10; in the current time microstep, but rather on a refiring at the&#10; the same physical time but incremented timestep.&#10; &lt;p&gt;&#10; A consequence of this strategy is that this actor is&#10; able to produce an output (or assert that there is no output) before the&#10; input with the same time is known.   Hence, it can be used to break&#10; causality loops in feedback systems. The Continuous director will leverage this when&#10; determining the fixed point behavior. It is sometimes useful to think&#10; of this zero-valued delay as an infinitesimal delay.  </description>
  <author>Edward A. Lee, Jeff C. Jensen</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (eal)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="delay">The amount of delay. The default for this parameter is 1.0. This&#10; parameter must contain a DoubleToken with a non-negative value, or an&#10; exception will be thrown when it is set.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="initialOutput">Initial output of the delay actor. The default for this parameter&#10;  is null, indicating no output will be generated until after input&#10;  has been received.</property>
</doc>
