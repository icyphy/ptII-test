<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="LevelCrossingDetector" class="ptolemy.domains.continuous.lib.LevelCrossingDetector">
  <description>
An event detector that converts continuous signals to discrete events when&#10; the input &lt;i&gt;trigger&lt;/i&gt; signal crosses a threshold specified by the &lt;i&gt;level&lt;/i&gt;&#10; parameter. The &lt;i&gt;direction&lt;/i&gt; parameter&#10; can constrain the actor to detect only rising or falling transitions.&#10; It has three possible values, &quot;rising&quot;, &quot;falling&quot;, and &quot;both&quot;, where&#10; &quot;both&quot; is the default. This actor will produce an output whether the&#10; input is continuous or not. That is, if a discontinuity crosses the&#10; threshold in the right direction, it produces an output at the time&#10; of the discontinuity.  If the input is continuous,&#10; then the output is generated when the input is&#10; within &lt;i&gt;errorTolerance&lt;/i&gt; of the level.&#10; The value of the output is given by the &lt;i&gt;value&lt;/i&gt; parameter,&#10; which by default has the value of the &lt;i&gt;level&lt;/i&gt; parameter.&#10;  &lt;p&gt;&#10; This actor has a one microstep delay before it will produce an&#10; output. That is, when a level crossing is detected, the actor&#10; requests a refiring in the next microstep at the current time,&#10; and only in that refiring produces the output.&#10; This ensures that the output satisfies the piecewise&#10; continuity constraint. It is always absent at microstep 0.&#10;&lt;p&gt;&#10; This actor will not produce an event at the time of the first firing&#10; unless there is a level crossing discontinuity at that time.  </description>
  <author>Edward A. Lee, Haiyang Zheng</author>
  <version>$Id$</version>
  <since>Ptolemy II 6.0</since>
  <Pt.ProposedRating>Yellow (hyzheng)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (hyzheng)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port. The type is at least the type of the&#10;  &lt;i&gt;value&lt;/i&gt; parameter.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="trigger">The trigger port. This is an input port with type double.</port>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="direction">A parameter that can be used to limit the detected level crossings&#10;  to rising or falling. There are three choices: &quot;falling&quot;, &quot;rising&quot;, and&#10;  &quot;both&quot;. The default value is &quot;both&quot;.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="errorTolerance">The error tolerance specifying how close the value of a continuous&#10;  input needs to be to the specified level to produce the output event.&#10;  Note that this indirectly affects the accuracy of the time of the&#10;  output since the output can be produced at any time after the&#10;  level crossing occurs while it is still within the specified&#10;  error tolerance of the level. This is a double with default 1e-4.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="level">The parameter that specifies the level threshold. By default, it&#10;  contains a double with value 0.0. Note, a change of this&#10;  parameter at run time will not be applied until the next&#10;  iteration.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="value">The output value to produce when a level-crossing is detected.&#10;  This can be any data type. It defaults to the same value&#10;  as the &lt;i&gt;level&lt;/i&gt; parameter.</property>
</doc>
