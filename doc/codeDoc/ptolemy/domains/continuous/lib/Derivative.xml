<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="Derivative" class="ptolemy.domains.continuous.lib.Derivative">
  <description>
A crude approximation to a derivative in the continuous domain.&#10; In continuous-time modeling, one should generally avoid taking derivatives&#10; directly. It is better to use an &lt;a href=&quot;../../../../ptolemy/domains/continuous/lib/Integrator.xml&quot;&gt;ptolemy.domains.continuous.lib.Integrator&lt;/a&gt; actor in a feedback loop.&#10; The input to the Integrator is the derivative of its output.&#10; The reason for avoiding taking derivatives directly&#10; is that small amounts of noise on the input of&#10; a derivative actor result in large output fluctuations.&#10; Since continuous-time simulation involves choosing step sizes,&#10; the choice of step size will strongly affect the resulting&#10; output of the derivative. Derivatives tend to be very noisy,&#10; with considerable fluctuations in value. Moreover, if the&#10; input to this actor has discontinuities, the output will not&#10; be piecewise continuous, and at the discontinuity, the results&#10; could be difficult to control. If an Integrator is downstream,&#10; then the solver will be forced to use its smallest step size.&#10; &lt;p&gt;&#10; That said, if you have read this far, you are probably determined&#10; to compute a derivative. Hence, we provide this actor, which performs&#10; a simple operation and provides a simple (partial) guarantee. Specifically,&#10; a correctly connected Derivative followed by an Integrator is (almost)&#10; an identity function. And an Integrator followed by a Derivative is&#10; also (almost) an identity function. The reason for the &quot;almost&quot; is&#10; that very first &lt;i&gt;derivative&lt;/i&gt; output of the Derivative actor&#10; is always zero. Determining a derivative without any past history&#10; requires seeing the future. Although in principle it might be&#10; possible for this actor to collaborate with the solver to&#10; speculatively execute into the future to get the derivative,&#10; we have not done that here.&#10; &lt;p&gt;&#10; Upon firing, this actor produces an output on the &lt;i&gt;derivative&lt;/i&gt;&#10; port, and may also produce an output on the &lt;i&gt;impulse&lt;/i&gt; port.&#10; The &lt;i&gt;derivative&lt;/i&gt; output value is the difference between the&#10; input at the current time and the previous input divided by the&#10; time between these inputs, unless that time is zero. If the time&#10; between this input and the previous one is zero, and the value&#10; of the previous input and the current one is non-zero, then this&#10; actor will be produce the value difference on the &lt;i&gt;impulse&lt;/i&gt;&#10; output and will produce whatever&#10; it previously produced on the &lt;i&gt;derivative&lt;/i&gt; output.&#10; &lt;p&gt;&#10; On the very first firing after being initialized,&#10; this actor always produces zero&#10; on the &lt;i&gt;derivative&lt;/i&gt; output. If the input is&#10; non-zero, then it will produce the value of the input on&#10; the &lt;i&gt;impulse&lt;/i&gt; output. This ensures that if the&#10; &lt;i&gt;impulse&lt;/i&gt; output is connected to the &lt;i&gt;impulse&lt;/i&gt;&#10; input of a downstream Integrator, that the Integrator will&#10; be correctly initialized.&#10; &lt;p&gt;&#10; The &lt;i&gt;impulse&lt;/i&gt; output should be interpreted as a Dirac&#10; delta function. It is a discrete output. If it is connected to&#10; the &lt;i&gt;impulse&lt;/i&gt; input of the Integrator actor, and the&#10; &lt;i&gt;derivative&lt;/i&gt; output is connected to the &lt;i&gt;derivative&lt;/i&gt;&#10; input of the Integrator actor, then the cascade of two actors&#10; will be an identity function for all input signals.&#10; &lt;p&gt;&#10; If upon any firing the input is absent, then both outputs&#10; will be absent, and the actor will reinitialize. Hence, on&#10; the next firing where the input is present, this actor will&#10; behave as if that firing is a first firing.&#10; &lt;p&gt;&#10; Note that this actor exercises no control at all over step sizes.&#10; It simply works with whatever step sizes are provided. Thus,&#10; it is mathematically questionable to use it in any model except&#10; where its input comes from an Integrator or its outputs go&#10; to an Integrator. The Integrator actor will exercise control&#10; over step sizes.  </description>
  <author>Edward A. Lee and Janette Cardoso</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (eal)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="derivative">The derivative output port. This port has type double.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="impulse">The impulse output port. This port has type double.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="input">The input port. This port has type double.</port>
</doc>
