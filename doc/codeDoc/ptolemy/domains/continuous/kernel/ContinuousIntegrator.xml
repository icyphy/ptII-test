<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ContinuousIntegrator" class="ptolemy.domains.continuous.kernel.ContinuousIntegrator">
  <description>
The integrator in the continuous domain.&#10;&#10; &lt;p&gt;The &lt;i&gt;derivative&lt;/i&gt; port&#10; receives the derivative of the state of the integrator with respect&#10; to time. The &lt;i&gt;state&lt;/i&gt; output port shows the state of the&#10; integrator. So an ordinary differential equation (ODE), dx/dt = f(x,&#10; t), can be built as follows:&lt;/p&gt;&#10;&#10; &lt;pre&gt;&#10;            +---------------+&#10;     dx/dt  |               |   x&#10; +---------&amp;gt;|   Integrator  |---------+-----&amp;gt;&#10; |          |               |         |&#10; |          +----^-----^----+         |&#10; |                                    |&#10; |             |---------|            |&#10; +-------------| f(x, t) |&amp;lt;-----------+&#10;               |---------|&#10; &lt;/pre&gt;&#10;&#10; &lt;p&gt; An integrator also has a port-parameter called&#10; &lt;i&gt;initialState&lt;/i&gt;. The parameter provides the initial state for&#10; integration during the initialization stage of execution. If during&#10; execution an input token is provided on the port, then the state of&#10; the integrator will be reset at that time to the value of the&#10; token. The default value of the parameter is 0.0.&lt;/p&gt;&#10;&#10; &lt;p&gt; An integrator also has an input port named &lt;i&gt;impulse&lt;/i&gt;.  When&#10; present, a token at the &lt;i&gt;impulse&lt;/i&gt; input port is interpreted as&#10; the weight of a Dirac delta function.  It causes an&#10; increment or decrement to the state at the time of&#10; the arrival of the value.  If both &lt;i&gt;impulse&lt;/i&gt; and&#10; &lt;i&gt;initialState&lt;/i&gt; have data on the same microstep,&#10; then &lt;i&gt;initialState&lt;/i&gt; dominates.&lt;/p&gt;&#10;&#10; &lt;p&gt; Note that both &lt;i&gt;impulse&lt;/i&gt; and &lt;i&gt;reset&lt;/i&gt; expect to&#10; receive discrete inputs. To preserve continuity, this means&#10; that those inputs should be present only when the solver&#10; step size is zero.&#10; If this assumption is violated, then this actor will throw&#10; an exception.&lt;/p&gt;&#10;&#10; &lt;p&gt; An integrator can generate an output (its current state) before&#10; the derivative input is known, and hence can be used in feedback&#10; loops like that above without creating a causality loop.  Since&#10; &lt;i&gt;impulse&lt;/i&gt; and &lt;i&gt;initialState&lt;/i&gt; inputs affect the output&#10; immediately, using them in feedback loops may require inclusion&#10; of a TimeDelay actor.&lt;/p&gt;&#10;&#10; &lt;p&gt; For different ODE solving methods, the functionality of an&#10; integrator may be different. The delegation and strategy design&#10; patterns are used in this class, the abstract ODESolver class, and&#10; the concrete ODE solver classes. Some solver-dependent methods of&#10; integrators delegate to the concrete ODE solvers.&lt;/p&gt;&#10;&#10; &lt;p&gt; An integrator can possibly have several auxiliary variables for&#10; the ODE solvers to use. The ODE solver class provides the number&#10; of variables needed for that particular solver.  The auxiliary&#10; variables can be set and get by setAuxVariables() and&#10; getAuxVariables() methods.&lt;/p&gt;&#10;&#10; &lt;p&gt; This class is based on the CTBaseIntegrator by Jie Liu and&#10; Haiyang Zheng, but it has more ports and provides more functionality.&lt;/p&gt;  </description>
  <author>Haiyang Zheng and Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 6.0</since>
  <Pt.ProposedRating>Yellow (hyzheng)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (yuhong)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="impulse">The impulse input port. This is a single port of type double.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="derivative">The derivative port. This is a single port of type double.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="state">The state port. This is a single port of type double.</port>
    <!--ptolemy.actor.parameters.PortParameter-->
    <property name="initialState">The initial state of type DoubleToken. The default value is 0.0.</property>
</doc>
