<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="TimedDelay" class="ptolemy.domains.de.lib.TimedDelay">
  <description>
This actor delays the input by a specified amount of time. The amount&#10; of the time is required to be non-negative and has a default value 1.0.&#10; The input and output types are unconstrained, except that the output type&#10; must be the same as that of the input.&#10; &lt;p&gt;&#10; This actor keeps a local FIFO queue to store all received but not processed&#10; inputs. The behavior of this actor on each firing is to read a token from&#10; the input, if there is one, store it into the local queue, and output the&#10; previously received token that is scheduled to be produced at the current&#10; time.&#10; &lt;p&gt; During the postfire() method, this actor schedules itself to fire again&#10; to produce the just received token on the corresponding output channel after&#10; the appropriate time delay. Note that if the value of delay is 0.0, the&#10; actor schedules itself to fire at the current model time.&#10; &lt;p&gt;&#10; Occasionally, this actor is useful with the&#10; delay parameter set to 0.0.  The time stamp of the output will&#10; equal that of the input, but there is a &quot;microstep&quot; delay.&#10; The discrete-event domain in Ptolemy II has a &quot;super dense&quot; model&#10; of time, meaning that a signal from one actor to another can&#10; contain multiple events with the same time stamp. These events&#10; are &quot;simultaneous,&quot; but nonetheless&#10; have a well-defined sequential ordering determined by the order&#10; in which they are produced.&#10; If \textit{delay} is 0.0, then the fire() method of this actor&#10; always produces on its output port the event consumed in the&#10; \textit{previous iteration} with the same time stamp, if there&#10; was one. If there wasn't such a previous iteration, then it&#10; produces no output.  Its postfire() method consumes and&#10; records the input for use in the next iteration, if there&#10; is such an input, and also requests a refiring at the current&#10; time.  This refire request triggers the next iteration (at&#10; the same time stamp), on which the output is produced.&#10; &lt;p&gt;&#10; A consequence of this strategy is that this actor is&#10; able to produce an output (or assert that there is no output) before the&#10; input with the same time is known.   Hence, it can be used to break&#10; causality loops in feedback systems. The DE director will leverage this when&#10; determining the precedences of the actors. It is sometimes useful to think&#10; of this zero-valued delay as an infinitesimal delay.  </description>
  <author>Edward A. Lee, Lukito Muliadi, Haiyang Zheng</author>
  <version>$Id$</version>
  <since>Ptolemy II 1.0</since>
  <Pt.ProposedRating>Green (hyzheng)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (hyzheng)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="delay">The amount of delay. The default for this parameter is 1.0.&#10;  This parameter must contain a DoubleToken&#10;  with a non-negative value, or an exception will be thrown when&#10;  it is set.</property>
</doc>
