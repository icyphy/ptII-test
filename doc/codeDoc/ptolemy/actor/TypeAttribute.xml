<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="TypeAttribute" class="ptolemy.actor.TypeAttribute">
  <description>
An attribute for defining a data type for a port.&#10; Use setExpression() to define a data type, as in for example,&#10; &lt;pre&gt;&#10; attribute.setExpression(&quot;double&quot;);&#10; &lt;/pre&gt;&#10; The class TypedIOPort recognizes when this attribute is inserted&#10; and calls setTypeEquals() to define its type. In the above example,&#10; the type of the port is set to double.&#10; &lt;p&gt;&#10; The type can be given by any expression that can be evaluated.&#10; In fact, it would be equally valid to specify the type to be double&#10; using&#10; &lt;pre&gt;&#10; attribute.setExpression(&quot;0.0&quot;);&#10; &lt;/pre&gt;&#10; The Constants class defines the constant &quot;double&quot; to have the value&#10; 0.0, so that instead you may give the type by name.&#10; The Constants class defines for convenience the following&#10; constants: boolean, complex, double, fixedpoint, general,&#10; int, long, matrix, object, scalar, string, and unknown.&#10; The constant &quot;unknown&quot; has a rather special behavior, in that&#10; it sets the type of the port to be unknown, allowing type resolution&#10; to infer it.  The constant &quot;matrix&quot; designates a matrix&#10; without specifying an element type, in contrast to, for example,&#10; &quot;[double]&quot;, which specifies a double matrix.&#10; Similarly, the constant &quot;scalar&quot; designates a scalar of any type&#10; (double, int, long, etc.).&#10; The constant &quot;general&quot; designates any type.&#10; &lt;p&gt;&#10; Since the type is given by a &quot;prototype&quot; (an expression with the&#10; appropriate type), any data type that can be given in an expression&#10; can be specified as a type. For structured types, follow the&#10; same syntax as in expressions. For example:&#10; &lt;pre&gt;&#10; {double} - double array&#10; [int]    - int matrix&#10; {field1 = string, field2 = int} - record with two fields&#10; &lt;/pre&gt;&#10; &lt;p&gt;&#10; This attribute is a singleton in a strong sense.&#10; When its container is set, if the container contains any other instance&#10; of TypeAttribute, that other instance is removed.  </description>
  <author>Edward A. Lee, Xiaojun Liu</author>
  <version>$Id$</version>
  <since>Ptolemy II 1.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
</doc>
