<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="MapWorker" class="ptolemy.actor.ptalon.lib.MapWorker">
  <description>
A MapWorker actor, as a subsystem of the MapReduce system.&#10;&#10; &lt;p&gt; This actor has a parameter &lt;i&gt;classNameForMap&lt;/i&gt; which is the&#10; qualified name for a Java class that extends&#10; ptolemy.actor.ptalon.lib.MapReduceAlgorithm.  It must also have a no&#10; argument constructor.  By extending this abstract class, it will&#10; implement a method named &lt;i&gt;map&lt;/i&gt; with type signature:&#10;&#10; &lt;p&gt;&#10; &lt;code&gt;public List&amp;lt;KeyValuePair&amp;gt; map(String key, String value)&lt;/code&gt;&#10;&#10; &lt;p&gt; This method defines the Map algorithm for the MapReduce system.&#10; At each call, it should return list of KeyValuePairs, which is just a&#10; pair of strings, one representing a key for the reduce algorithm, and&#10; one representing a value for the reduce algorithm.  One instance of&#10; the MapReduce algorithm class will be created when the&#10; &lt;i&gt;classNameForMap&lt;/i&gt; parameter is set.  It will be reused at each&#10; firing.  This actor inputs a key and value token and outputs key,&#10; value pairs for each pair in the list generated by the user defined&#10; map procedure.  </description>
  <author>Adam CataldoAdam Cataldo</author>
  <version>$Id$</version>
  <since>Ptolemy II 6.1</since>
  <Pt.ProposedRating>Red (cxh)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="inputKey">A String input key.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="inputValue">A String input value.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="outputKey">A String output key.  For each pair of inputKey, inputValue&#10;  tokens read in, a possibly empty list of outputKey, outputValue&#10;  pairs will be outputs.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="outputValue">A String output value.  For each pair of inputKey, inputValue&#10;  tokens read in, a possibly empty list of outputKey, outputValue&#10;  pairs will be outputs.</port>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="classNameForMap">The qualified class name for a Java class containing a method&#10;  with signature:&#10;  &lt;p&gt;&#10;  &lt;code&gt;public static List&amp;lt;String[]&amp;gt; map(String key, String value)&lt;/code&gt;&#10;  &lt;p&gt;&#10;  Each element of each returned list should be a length two array of&#10;  Strings.</property>
</doc>
