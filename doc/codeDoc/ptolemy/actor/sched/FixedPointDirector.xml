<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="FixedPointDirector" class="ptolemy.actor.sched.FixedPointDirector">
  <description>
A base class for directors that have fixed point semantics at each&#10; iteration. An iteration consists of repeated firings of the&#10; actors controlled by this director until a fixed point is reached.&#10; An iteration has converged if firing actors will not change signal&#10; status any more.&#10; &lt;p&gt;&#10; At the beginning of each iteration, the status of&#10; all inputs and outputs is unknown. Upon firing an actor,&#10; the status of its output signals may become known.  Once the status of&#10; a signal becomes known, it cannot be changed back to unknown in the&#10; iteration. This monotonicity constraint ensures the existence and&#10; uniqueness of the fixed point.&#10; During an iteration, the prefire() and fire() methods of the controlled&#10; actors may be repeatedly invoked, but the postfire() method will be&#10; invoked exactly once after the fixed point has been found.&#10; The postfire() methods of the contained actors are invoked only&#10; in the postfire() method of this director, and they are invoked&#10; in arbitrary order.&#10; &lt;/p&gt;&lt;p&gt;&#10; If the prefire() method of an actor returns false, then this director&#10; assumes that all the outputs of the actor are absent. The actor has&#10; declined to fire.&#10; &lt;/p&gt;&lt;p&gt;&#10; Although this director does not require any specific ordering of actor&#10; firings, a scheduler is used to choose an efficient ordering.&#10; &lt;p&gt;&#10; By default, actors are &lt;i&gt;strict&lt;/i&gt;, which means that all their&#10; input signals must be known before the actor can be fired. Here,&#10; what we mean by &quot;fired&quot; is that prefire() is invoked, and if it&#10; returns true, then fire() is invoked. Such actors&#10; will be fired only once in an iteration. A non-strict actor can&#10; be fired regardless of the status of its inputs, and may be fired&#10; repeatedly in an iteration if some of the inputs are unknown.&#10; Once an actor is fired with all its inputs known, it will not&#10; be fired again in the same iteration.&#10; A composite actor containing this director is a non-strict actor.&#10; &lt;p&gt;&#10; For an actor to be used under the control of this director, it must&#10; either be strict, or if it is non-strict, it must be monotonic.&#10; Montonicity implies two constraints on the actor. First, if prefire()&#10; ever returns true during an iteration, then it will return true&#10; on all subsequent invocations in the same iteration().&#10; Second, if either prefire() or fire() call clear() on an output port,&#10; then no subsequent invocation in the same iteration can call&#10; put() on the port. If prefire() or fire() call put() on an&#10; output port with some token, then no subsequent invocation in&#10; the same iteration can call clear() or put() with a token with&#10; a different value.&#10; These constraints ensure determinacy.&#10; &lt;/p&gt;&lt;p&gt;&#10; If &lt;i&gt;synchronizeToRealTime&lt;/i&gt; is set to &lt;code&gt;true&lt;/code&gt;,&#10; then the postfire() method stalls until the real time elapsed&#10; since the model started matches the current time.&#10; This ensures that the director does not get ahead of real time. However,&#10; of course, this does not ensure that the director keeps up with real time.&#10; Note that this synchronization occurs &lt;i&gt;after&lt;/i&gt; actors have been fired,&#10; but before they have been postfired.&#10; &lt;p&gt;&#10; This class is based on the original SRDirector, written by Paul Whitaker.  </description>
  <author>Haiyang Zheng and Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 5.2</since>
  <Pt.ProposedRating>Green (hyzheng)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (eal)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="iterations">The number of times that postfire may be called before it&#10;  returns false. The type must be int, and the value&#10;  defaults to zero. If the value is less than or equal to zero,&#10;  then the execution will never return false in postfire, and&#10;  thus the execution can continue forever.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="synchronizeToRealTime">Specify whether the execution should synchronize to the&#10;  real time. This parameter has type boolean and defaults&#10;  to false. If set to true, then this director stalls in the&#10;  prefire() method until the elapsed real real time matches&#10;  the current time. If the &lt;i&gt;period&lt;/i&gt; parameter has value&#10;  0.0 (the default), then changing this parameter to true&#10;  has no effect. Note that in this base class, there is&#10;  no &lt;i&gt;period&lt;/i&gt; parameter and time is never advanced,&#10;  so this will have no effect. It has effect in derived&#10;  classes.</property>
</doc>
