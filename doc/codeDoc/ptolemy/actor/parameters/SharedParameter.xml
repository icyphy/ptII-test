<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="SharedParameter" class="ptolemy.actor.parameters.SharedParameter">
  <description>
This parameter is shared throughout a model. Changing the expression of&#10; any one instance of the parameter will result in all instances that&#10; are shared being changed to the same expression.  An instance elsewhere&#10; in the model (within the same top level) is shared if it has the&#10; same name and its container is of the class specified in the&#10; constructor (or of the container class, if no class is specified&#10; in the constructor). Note that two parameters with the same&#10; expression do not necessarily have the same value, since the&#10; expression may reference other parameters that are in scope.&#10; &lt;p&gt;&#10; One exception is that if this parameter is (deeply) within an&#10; instance of EntityLibrary, then the parameter is not shared.&#10; Were this not the case, then opening a library containing this&#10; parameter would force expansion of all the sublibraries of&#10; EntityLibrary, which would defeat the lazy instantiation&#10; of EntityLibrary.&#10; &lt;p&gt;&#10; When this parameter is constructed, the specified container&#10; will be used to infer the parameter value from the container.&#10; That is, if the container is within a model that has any&#10; parameters shared with this one, then the value will be&#10; set to the last of those encountered.&#10; If the container is subsequently changed, it is up to the&#10; code implementing the change to use the inferValueFromContext()&#10; method to reset the value to match the new context.&#10; Note that this really needs to be done if the container&#10; of the container, or its container, or any container&#10; above this parameter is changed.  It is recommended to use&#10; the four-argument constructor, so you can specify a default&#10; value to use if there are no shared parameters.&#10; &lt;p&gt;&#10; Note that it might be tempting to use a static parameter field&#10; to achieve this effect, but this would be problematic for two&#10; reasons. First, the parameter would only be able to have one&#10; container. Second, the parameter would be shared across all&#10; models in the same Java virtual machine, not just within a&#10; single model.  </description>
  <author>Edward A. Lee, contributor: Christopher Brooks, Bert Rodiers</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Green (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Green (acataldo)</Pt.AcceptedRating>
</doc>
