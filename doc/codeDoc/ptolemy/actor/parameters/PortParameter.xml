<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="PortParameter" class="ptolemy.actor.parameters.PortParameter">
  <description>
&lt;p&gt;This parameter creates an associated port that can be used to update&#10; the current value of the parameter. This parameter has two values,&#10; which may not be equal, a &lt;i&gt;current value&lt;/i&gt; and a &lt;i&gt;persistent value&lt;/i&gt;.&#10; The persistent value is returned by&#10; getExpression() and is set by any of three different mechanisms:&lt;/p&gt;&#10; &lt;ul&gt;&#10; &lt;li&gt; calling setExpression();&lt;/li&gt;&#10; &lt;li&gt; calling setToken(); and &lt;/li&gt;&#10; &lt;li&gt; specifying a value as a constructor argument.&lt;/li&gt;&#10; &lt;/ul&gt;&#10; &lt;p&gt;&#10; All three of these will also set the current value, which is then&#10; equal to the persistent value.&#10; The current value is returned by get getToken()&#10; and is set by any of two different mechanisms:&lt;/p&gt;&#10; &lt;ul&gt;&#10; &lt;li&gt; calling setCurrentValue();&lt;/li&gt;&#10; &lt;li&gt; calling update() sets the current value if there is an associated&#10; port, and that port has a token to consume; and&lt;/li&gt;&#10; &lt;/ul&gt;&#10; These two techniques do not change the persistent value, so after&#10; these are used, the persistent value and current value may be different.&#10; &lt;p&gt;&#10; When the container for this parameter is initialized, the current&#10; value of the parameter is reset to match the persistent value.&#10; &lt;p&gt;&#10; When using this parameter in an actor, care must be exercised&#10; to call update() exactly once per firing prior to calling getToken().&#10; Each time update() is called, a new token will be consumed from&#10; the associated port (if the port is connected and has a token).&#10; If this is called multiple times in an iteration, it may result in&#10; consuming tokens that were intended for subsequent iterations.&#10; Thus, for example, update() should not be called in fire() and then&#10; again in postfire().  Moreover, in some domains (such as DE),&#10; it is essential that if a token is provided on a port, that it&#10; is consumed.  In DE, the actor will be repeatedly fired until&#10; the token is consumed.  Thus, it is an error to not call update()&#10; once per iteration.  For an example of an actor that uses this&#10; mechanism, see Ramp.&lt;/p&gt;&#10; &lt;p&gt;&#10; If this actor is placed in a container that does not implement&#10; the TypedActor interface, then no associated port is created,&#10; and it functions as an ordinary parameter.  This is useful,&#10; for example, if this is put in a library, where one would not&#10; want the associated port to appear.&lt;/p&gt;&#10;&#10; &lt;p&gt;There are a few situations where PortParameter might not do what&#10; you expect:&lt;/p&gt;&#10;&#10; &lt;ol&gt;&#10; &lt;li&gt; If it is used in a transparent composite actor, then a token provided&#10; to a PortParameter will never be read.  A transparent composite actor&#10; is one without a director.&#10; &lt;br&gt;Workaround: Put a director in the composite.&lt;br&gt;&#10; &lt;/li&gt;&#10;&#10; &lt;li&gt; Certain actors (such as the Integrator in CT) read parameter&#10; values only during initialization.  During initialization, a&#10; PortParameter can only have a value set via the parameter (it&#10; can't have yet received a token).  So if the initial value of the&#10; Integrator is set to the value of the PortParameter, then it will&#10; see only the parameter value, never the value provided via the&#10; port.&#10; &lt;br&gt;Workaround: Use a RunCompositeActor to contain the model with the&#10; Integrator.&#10; &lt;/li&gt;&#10;&#10; &lt;/ol&gt;  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 3.0</since>
  <Pt.ProposedRating>Green (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (neuendor)</Pt.AcceptedRating>
    <!--ptolemy.actor.parameters.ParameterPort-->
    <port name="_port">The associated port.</port>
</doc>
