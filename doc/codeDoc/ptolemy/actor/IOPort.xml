<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="IOPort" class="ptolemy.actor.IOPort">
  <description>
This class supports exchanging data between entities via message passing.&#10; It can serve as an input port, an output port, or both. If it is an&#10; input port, then it contains some number of receivers, which are&#10; responsible for receiving data from remote entities. If it is an&#10; output port, then it can send data to remote receivers.&#10;&#10; &lt;p&gt;&#10; Its receivers are created by a director.  It must therefore be&#10; contained by an actor that has a director.  If it is not, then&#10; any attempt to read data or list the receivers will trigger&#10; an exception.&#10;&#10; &lt;p&gt;&#10; If this port is at the boundary of an composite actor, then it&#10; can have both inside and outside links, with corresponding inside&#10; and outside receivers if it opaque. The inside links are to&#10; relations inside the opaque composite actor, whereas the outside&#10; links are to relations outside. If it is not specified, then a link&#10; is an outside link.&#10;&#10; &lt;p&gt;&#10; The port has a &lt;i&gt;defaultValue&lt;/i&gt; parameter that, by default, is&#10; empty. If this parameter is not empty, the port always has a token.&#10; The value of the port is initially specified by the defaultValue.&#10; Afterwards, the previous token of the port is remembered.&#10; The defaultValue may optionally be an array, in which case a different&#10; default value can be different for each channel.&#10; If the port is wider than the array, then only the first &lt;i&gt;n&lt;/i&gt;&#10; channels will have default values, where &lt;i&gt;n&lt;/i&gt; is the length of&#10; the array.&#10;&#10; &lt;p&gt;&#10; The port has a &lt;i&gt;width&lt;/i&gt;, which by default is constrained to&#10; be either zero or one.&#10; The width is the sum of the widths of the linked relations.&#10; A port with a width greater than one behaves as a bus interface,&#10; so if the width is &lt;i&gt;w&lt;/i&gt;, then the port can simultaneously&#10; handle &lt;i&gt;w&lt;/i&gt; distinct input or output channels of data.&#10;&#10; &lt;p&gt;&#10; In general, an input port might have more than one receiver for&#10; each channel.  This occurs particularly for transparent input ports,&#10; which treat the receivers of the ports linked on the inside as its own.&#10; This might also occur for opaque ports in some derived classes.&#10; Each receiver in the group is sent the same data. Thus, an input port in&#10; general will have &lt;i&gt;w&lt;/i&gt; distinct groups of receivers, and can receive&#10; &lt;i&gt;w&lt;/i&gt; distinct channels.&#10;&#10; &lt;p&gt;&#10; By default, the maximum width of the port is one, so only one&#10; channel is handled. A port that allows a width greater than one&#10; is called a &lt;i&gt;multiport&lt;/i&gt;. Calling setMultiport() with a&#10; &lt;i&gt;true&lt;/i&gt; argument converts the port to a multiport.&#10;&#10; &lt;p&gt;&#10; The width of the port is not set directly. It is the sum of the&#10; widths of the relations that the port is linked to on the outside.&#10; The sum of the widths of the relations linked on the inside can be&#10; more or less than the width.  If it is more, then the excess inside&#10; relations will be treated as if they are unconnected.  If it is&#10; less, then the excess outside relations will be treated as if they&#10; are unconnected.&#10;&#10; &lt;p&gt;&#10; An IOPort can only link to instances of IORelation. Derived classes&#10; may further constrain links to a subclass of IORelation.  To do&#10; this, they should override the protected methods _checkLink() and&#10; _checkLiberalLink() to throw an exception if their arguments are&#10; not of the appropriate type.  Similarly, an IOPort can only be&#10; contained by a class derived from ComponentEntity and implementing&#10; the Actor interface.  Subclasses may further constrain the&#10; containers by overriding the protected method _checkContainer().  </description>
  <author>Edward A. Lee, Jie Liu, Neil Smyth, Lukito Muliadi, Contributor: Bert Rodiers</author>
  <version>$Id$</version>
  <since>Ptolemy II 0.2</since>
  <Pt.ProposedRating>Green (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (neuendor)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="defaultValue">The default value of the port. By default, this parameter is&#10;  empty. If this value is not empty, then the port is persistent,&#10;  which means that the get methods always return a token (they never&#10;  throw NoTokenException), and that &lt;a href=&quot;../../ptolemy/actor/IOPort.html#hasToken&quot;&gt;hasToken(int)&lt;/a&gt;,&#10;  &lt;a href=&quot;../../ptolemy/actor/IOPort.html#hasToken&quot;&gt;hasToken(int, int)&lt;/a&gt;,&#10;  and &lt;a href=&quot;../../ptolemy/actor/IOPort.html#hasTokenInside&quot;&gt;hasTokenInside(int)&lt;/a&gt;&#10;  always return true, indicating that a token is available.&#10;  To determine whether there is a new token, use&#10;  &lt;a href=&quot;../../ptolemy/actor/IOPort.html#hasNewToken&quot;&gt;hasNewToken(int)&lt;/a&gt; or &lt;a href=&quot;../../ptolemy/actor/IOPort.html#hasNewTokenInside&quot;&gt;hasNewTokenInside(int)&lt;/a&gt;.&#10;  &lt;p&gt;&#10;  The defaultValue may optionally be an array, in which case a different&#10;  default value can be different for each channel.&#10;  If the port is wider than the array, then only the first &lt;i&gt;n&lt;/i&gt;&#10;  channels will have default values, where &lt;i&gt;n&lt;/i&gt; is the length of&#10;  the array.&#10;  &lt;p&gt;&#10;  If this port is an output port, then the persistent value is&#10;  used only when retrieving a token from the inside. I.e., it&#10;  will be used only if the output port belongs to an opaque&#10;  composite actor.</property>
</doc>
