<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="Publisher" class="ptolemy.actor.lib.Publisher">
  <description>
This actor publishes input tokens on a named channel. The tokens are&#10; &quot;tunneled&quot; to any instance of &lt;a href=&quot;../../../ptolemy/actor/lib/Subscriber.xml&quot;&gt;ptolemy.actor.lib.Subscriber&lt;/a&gt; that names the same channel.&#10; If &lt;a href=&quot;../../../ptolemy/actor/lib/Publisher.xml#global&quot;&gt;global&lt;/a&gt; is false (the default), then this publisher&#10; will only send to instances of Subscriber that are under the&#10; control of the same director. That is, it can&#10; be at a different level of the hierarchy, or in an entirely different&#10; composite actor, as long as the relevant composite actors are&#10; transparent (have no director). If &lt;a href=&quot;../../../ptolemy/actor/lib/Publisher.xml#global&quot;&gt;global&lt;/a&gt; is true,&#10; then the subscriber may be anywhere in the model, as long as its&#10; &lt;i&gt;global&lt;/i&gt; parameter is also true.&#10; &lt;p&gt;&#10; It is an error to have two instances of Publisher using the same&#10; channel under the control of the same director. When you create a&#10; new Publisher, by default, it has no channel name. You have to&#10; specify a channel name to use it.&#10; &lt;p&gt;&#10; &lt;b&gt;How it works:&lt;/b&gt;&#10; This actor has a hidden output port. When the channel name&#10; is specified, typically during model construction, this actor&#10; causes a relation to be created in the least opaque composite&#10; actor above it in the hierarchy and links to that relation.&#10; In addition, if &lt;a href=&quot;../../../ptolemy/actor/lib/Publisher.xml#global&quot;&gt;global&lt;/a&gt; is set to true, it causes&#10; a port to be created in that composite, and also links that&#10; port to the relation on the inside.  The relation is recorded by the opaque&#10; composite.  When a Subscriber is preinitialized that refers&#10; to the same channel, that Subscriber finds the relation (by&#10; finding the least opaque composite actor above it) and links&#10; to the relation. Some of these links are &quot;liberal links&quot; in that&#10; they cross levels of the hierarchy.&#10; &lt;p&gt;&#10; Since publishers are linked to subscribers,&#10; any data dependencies that the director might assume on a regular&#10; &quot;wired&quot; connection will also be assumed across Publisher-Subscriber&#10; pairs. Similarly, type constraints will propagate across&#10; Publisher-Subscriber pairs. That is, the type of the Subscriber&#10; output will match the type of the Publisher input.  </description>
  <author>Edward A. Lee, Raymond A. Cardillo, Bert Rodiers</author>
  <version>$Id$</version>
  <since>Ptolemy II 5.2</since>
  <Pt.ProposedRating>Green (cxh)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="input">The input port.  This is a multiport, allowing multiple&#10;  signals to be be transmitted through the publisher channel.&#10;  This base class imposes no type constraints except&#10;  that the type of the input cannot be greater than the type of the&#10;  output.</port>
    <!--ptolemy.actor.PublisherPort-->
    <port name="output">The output port. This port is hidden and should not be&#10;  directly used. By default, the type of this output is constrained&#10;  to be at least that of the input. This port is hidden by default&#10;  and the actor handles creating connections to it.</port>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="channel">The name of the channel.  Subscribers that reference this same&#10;  channel will receive any transmissions to this port.&#10;  This is a string that defaults to empty, indicating that&#10;  no channel is specified. A channel must be set before&#10;  the actor executes or an exception will occur.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="global">Specification of whether the published data is global.&#10;  If this is set to true, then a subscriber anywhere in the model that&#10;  references the same channel by name will see values published by&#10;  this publisher. If this is set to false (the default), then only&#10;  those subscribers that are fired by the same director will see&#10;  values published on this channel.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="propagateNameChanges">If true, then propagate channel name changes to any&#10;  Subscribers.  The default value is a BooleanToken with the&#10;  value false, indicating that if the channel name is changed,&#10;  then the channel names of the Subscribers are not changed.  If&#10;  the value is true, then if the channel name is changed, the&#10;  channel names of the connected Subscribers are updated.&#10;&#10;  &lt;p&gt;If the value is true, then SubscriptionAggregators that&#10;  have the same regular expression as the channel name of the&#10;  Publisher will be updated.  However, SubscriptionAggregators&#10;  usually have regular expressions as channel names, so usually&#10;  the channel name of the SubscriptionAggregator will &lt;b&gt;not&lt;/b&gt;&#10;  be updated.&lt;/p&gt;&#10;&#10;  &lt;p&gt;Note that if a Publisher is within an Actor Oriented Class&#10;  definition, then any Subscribers with the same channel name in&#10;  Actor Oriented Class definitions will &lt;b&gt;not&lt;/b&gt; be updated.&#10;  This is because there is no connection between the Publisher&#10;  in the Actor Oriented Class definition and the Subscriber.&#10;  However, if the channel name in a Publisher in an instance of&#10;  an Actor Oriented Class is updated, then the&#10;  corresponding Subscribers in instances of Actor Oriented Class&#10;  will be updated.&lt;/p&gt;</property>
</doc>
