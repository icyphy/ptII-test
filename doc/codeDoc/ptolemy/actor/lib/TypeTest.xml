<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="TypeTest" class="ptolemy.actor.lib.TypeTest">
  <description>
&lt;p&gt;An actor that can be used for regression test of the type resolution&#10; system.  During the initialize phase, after type resolution has been&#10; performed, this actor compares resolved types in the model with types&#10; stored in several parameters.  If the types are the same, then the&#10; actor does nothing.  However, if the types are different, then the&#10; actor throws an exception.  Hence, as with the Test actor, this actor&#10; can be easily used to build automatically executed tests of the type&#10; system from within Vergil.&lt;/p&gt;&#10;&#10;&lt;p&gt; The types expected by this actor are stored in two parameters,&#10; each parameter contains a record of record of strings.  The outer&#10; record contains labels corresponding to the names of actors in the&#10; same level of hierarchy as this actor.  The inner record contains&#10; labels corresponding to the names of typeable objects in the&#10; appropriate actor.  The strings in the record correspond to string&#10; representations of the types of the typeable objects.  For the&#10; &lt;i&gt;portTypes&lt;/i&gt; parameter, the typeable objects are assumed to be&#10; ports, and for the &lt;i&gt;parameterTypes&lt;/i&gt; parameter, the objects are&#10; assumed to be parameters.&lt;/p&gt;&#10;&#10; &lt;p&gt; Note that this actor only tests type resolution at one level of&#10; opaque hierarchy.  Hierarchical models should include multiple&#10; instances of this actor.  Since filling in the types manually is&#10; difficult, this actor includes a training mode, similar to the&#10; NonStrictTest actor.  This mode automatically fills in the type&#10; parameters.  Also note that it is not necessary to specify the types&#10; of all typeable objects.  Any objects for which no type is specified&#10; are not checked.&lt;/p&gt;&#10;&#10; &lt;p&gt; During runtime, this actor consumes and ignores any input tokens.&#10; This makes it very easy to add this actor to an existing model without&#10; changing the behavior of the model.&lt;/p&gt;&#10;&#10; &lt;p&gt;&lt;b&gt;Note:&lt;/b&gt; For some reason, the way this actor reaches into&#10; other actors is not thread safe. This actor does not work with PN&#10; or Rendezvous, therefore.&lt;/p&gt;  </description>
  <author>Steve Neuendorffer</author>
  <version>$Id$</version>
  <since>Ptolemy II 3.0</since>
  <Pt.ProposedRating>Red (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (ssachs)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="parameterTypes">A record of record of strings representing the types of&#10;  parameters of actors in the model.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="portTypes">A record of record of strings representing the types of ports&#10;  of actors in the model.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="trainingMode">If true, then do not check inputs, but rather collect them&#10;  into the &lt;i&gt;portTypes&lt;/i&gt; and &lt;i&gt;parameterTypes&lt;/i&gt; arrays.&#10;  This parameter is a boolean, and it defaults to false.</property>
</doc>
