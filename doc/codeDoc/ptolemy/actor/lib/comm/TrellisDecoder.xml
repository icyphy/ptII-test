<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="TrellisDecoder" class="ptolemy.actor.lib.comm.TrellisDecoder">
  <description>
The TrellisDecoder is a generalization of the ViterbiDecoder. It&#10; can handle trellis coding, which has non-antipodal constellation.&#10; For a &lt;i&gt;k&lt;/i&gt;/&lt;i&gt;n&lt;/i&gt; convolutional code, the constellation&#10; should map each codeword into a complex number. Hence the length&#10; of the constellation should be a complex array of length&#10; 2&lt;i&gt;&lt;sup&gt;n&lt;/sup&gt;&lt;/i&gt;. For example, a 1/2 rate convolutional code&#10; should use 4PSK. a &lt;i&gt;k&lt;/i&gt;/3 convolutional code should use 8PSK.&#10; &lt;p&gt;&#10; The input port of the TrellisDecoder is complex. On each firing,&#10; the TrellisDecoder reads one input. The Euclidean distance is defined&#10; as the distance between the noisy input and the point in the&#10; constellation mapped from the codeword. Like in ViterbiDecoder,&#10; this actor produces &lt;i&gt;k&lt;/i&gt; outputs on each firing.&#10; &lt;p&gt;&#10; See ConvolutionalCoder and ViterbiDecoder for details about&#10; the meaning of these parameters.&#10; &lt;p&gt;&#10; For more information on convolutional codes, Viterbi decoder, and&#10; trellis coding, see the ConvolutionalCoder actor, ViterbiDecoder&#10; actor and Proakis, &lt;i&gt;Digital Communications&lt;/i&gt;, Fourth Edition,&#10; McGraw-Hill, 2001, pp. 471-477 and pp. 482-485,&#10; or Barry, Lee and Messerschmitt, &lt;i&gt;Digital Communication&lt;/i&gt;, Third Edition,&#10; Kluwer, 2004.&#10; &lt;p&gt;  </description>
  <author>Ye Zhou, contributor: Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 4.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
</doc>
