<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="BooleanMultiplexor" class="ptolemy.actor.lib.BooleanMultiplexor">
  <description>
A multiplexor with a boolean-valued select control signal.&#10; This actor conditionally routes input values from the&#10; &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#trueInput&quot;&gt;trueInput&lt;/a&gt; and &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#falseInput&quot;&gt;falseInput&lt;/a&gt; ports to the&#10; output port, depending on the value of the &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#select&quot;&gt;select&lt;/a&gt; input.&#10; &lt;p&gt;&#10; Upon firing, this actor reads the value at the &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#select&quot;&gt;select&lt;/a&gt; input,&#10; if there is one, and records its value (true or false).&#10; If it has a recorded select value (from this firing or a previous&#10; one), then it reads at most one token from both the&#10; &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#trueInput&quot;&gt;trueInput&lt;/a&gt; and the &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#falseInput&quot;&gt;falseInput&lt;/a&gt;, chooses one&#10; of those tokens depending on the recorded select value,&#10; and produces that token on the output.&#10; Because tokens are immutable, the same Token&#10; is sent to the output, rather than a copy.&#10; &lt;p&gt;&#10; This actor is non strict. Specifically, if either&#10; &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#trueInput&quot;&gt;trueInput&lt;/a&gt; or &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#falseInput&quot;&gt;falseInput&lt;/a&gt; is unknown, it may&#10; nonetheless be able to produce an output. Hence, this actor can&#10; be used in domains with fixed-point semantics, such as SR and Continuous.&#10; &lt;p&gt;&#10; In dataflow domains (SDF, DDF, and PN), normally all inputs will be&#10; known and present when the actor fires. It consumes all inputs&#10; and produces one output token. Thus, the actor behaves like an SDF&#10; actor, producing and consuming a single token on all ports.&#10; &lt;p&gt;&#10; In DE, the actor will only consume those inputs that are available.&#10; It does not even require a new &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#select&quot;&gt;select&lt;/a&gt; input on each firing.&#10; A value provided at the &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanMultiplexor.xml#select&quot;&gt;select&lt;/a&gt; input will persist&#10; and will be used in subsequent firings until a new value is provided.&#10; If no value has ever been provided, then this actor will produce no output.&#10; &lt;p&gt;&#10; This actor is different from the &lt;a href=&quot;../../../ptolemy/actor/lib/BooleanSelect.xml&quot;&gt;ptolemy.actor.lib.BooleanSelect&lt;/a&gt; actor, which consumes&#10; one token from the control input in one firing, and&#10; then in the next firing consumes a token from either the&#10; trueInput or the falseInput, depending on the value of the control input.&#10; It is also different from the &lt;a href=&quot;../../../ptolemy/actor/lib/Select.xml&quot;&gt;ptolemy.actor.lib.Select&lt;/a&gt; actor, which consumes&#10; one input from the control input and, in the same firing, one token&#10; from the input channel given by the value of the control input.&#10; &lt;/p&gt;  </description>
  <author>Steve Neuendorffer, Stavros Tripakis, Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 2.0</since>
  <Pt.ProposedRating>Green (neuendor)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (neuendor)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="trueInput">Input for tokens on the true path.  The type can be anything.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="falseInput">Input for tokens on the false path.  The type can be anything.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="select">Input that selects one of the other input ports.  The type is&#10;  boolean.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port.  The type is at least the type of&#10;  &lt;i&gt;trueInput&lt;/i&gt; and &lt;i&gt;falseInput&lt;/i&gt;</port>
</doc>
