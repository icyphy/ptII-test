<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="MultiplyDivide" class="ptolemy.actor.lib.MultiplyDivide">
  <description>
&lt;p&gt;A polymorphic multiplier and/or divider.  This adder has two input&#10; ports, both of which are multiports, and one output port, which is&#10; not.  The types on the ports are undeclared and will be resolved by&#10; the type resolution mechanism. Data that arrives on the input port&#10; named &lt;i&gt;multiply&lt;/i&gt; will be multiplied, and data that arrives on&#10; the input port named &lt;i&gt;divide&lt;/i&gt; will be divided.  Any token type&#10; supporting multiplication and division can be used.  In most&#10; domains, either input port can be left unconnected.  Thus, to get a&#10; simple multiplier (with no division), just leave the &lt;i&gt;divide&lt;/i&gt;&#10; input unconnected.&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; Currently, the type system is quite liberal about the resolved&#10; types it will permit at the inputs. In particular, it may permit&#10; the &lt;i&gt;multiply&lt;/i&gt; and &lt;i&gt;divide&lt;/i&gt; inputs to resolve to types&#10; that cannot in fact be multiplied or divided.  In these cases, a&#10; run-time error will occur.  In the future, we hope that the type&#10; system will intercept such errors before run time.&#10; &lt;/p&gt;&#10; &lt;p&gt;&#10; This actor does not require that each input channel have a token&#10; upon firing. It will multiply or divide available tokens at the&#10; inputs and ignore the channels that do not have tokens.  It&#10; consumes at most one input token from each port.  If no input&#10; tokens are available on the &lt;i&gt;multiply&lt;/i&gt; inputs, then a&#10; numerator of one is assumed for the division operations.  The &quot;one&quot;&#10; is obtained by calling the one() method of the first token seen at&#10; the &lt;i&gt;divide&lt;/i&gt; input.  If no input tokens are available at all,&#10; then no output is produced.&#10; &lt;/p&gt;  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 0.3</since>
  <Pt.ProposedRating>Green (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Green (bilung)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="divide">Input for tokens to be divided.  This is a multiport, and its&#10;  type is inferred from the connections.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">Output port.  The type is inferred from the connections.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="multiply">Input for tokens to be multiplied.  This is a multiport, and its&#10;  type is inferred from the connections.</port>
</doc>
