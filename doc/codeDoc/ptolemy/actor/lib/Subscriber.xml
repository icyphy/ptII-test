<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="Subscriber" class="ptolemy.actor.lib.Subscriber">
  <description>
This actor subscribes to tokens on a named channel. The tokens are&#10; &quot;tunneled&quot; from an instance of Publisher that names the same channel.&#10; If &lt;a href=&quot;../../../ptolemy/actor/lib/Subscriber.xml#global&quot;&gt;global&lt;/a&gt; is false (the default), then this subscriber&#10; will only see instances of Publisher that are under the&#10; control of the same director. That is, it can&#10; be at a different level of the hierarchy, or in an entirely different&#10; composite actor, as long as the relevant composite actors are&#10; transparent (have no director). If &lt;a href=&quot;../../../ptolemy/actor/lib/Subscriber.xml#global&quot;&gt;global&lt;/a&gt; is true,&#10; then the publisher may be anywhere in the model, as long as its&#10; &lt;i&gt;global&lt;/i&gt; parameter is also true.&#10; &lt;p&gt;&#10; Any number of instances of Subscriber can subscribe to the same&#10; channel.&#10; &lt;p&gt;&#10; This actor actually has a hidden input port that is connected&#10; to the publisher via hidden &quot;liberal links&quot; (links that are&#10; allowed to cross levels of the hierarchy).  Consequently,&#10; any data dependencies that the director might assume on a regular&#10; &quot;wired&quot; connection will also be assumed across Publisher-Subscriber&#10; pairs.  Similarly, type constraints will propagate across&#10; Publisher-Subscriber pairs. That is, the type of the Subscriber&#10; output will match the type of the Publisher input.  </description>
  <author>Edward A. Lee, Raymond A. Cardillo, Bert Rodiers</author>
  <version>$Id$</version>
  <since>Ptolemy II 5.2</since>
  <Pt.ProposedRating>Green (cxh)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.actor.SubscriberPort-->
    <port name="input">The input port.  This port is hidden and should not be&#10;  directly used. This base class imposes no type constraints except&#10;  that the type of the input cannot be greater than the type of the&#10;  output.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port. This is a multiport. If the corresponding&#10;  publisher has multiple input signals, then those multiple signals&#10;  will appear on this output port.&#10;  By default, the type of this output is constrained&#10;  to be at least that of the input. This port is hidden by default&#10;  and the actor handles creating connections to it.</port>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="channel">The name of the channel.  Subscribers that reference this same&#10;  channel will receive any transmissions to this port.&#10;  This is a string that defaults to &quot;channel1&quot;.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="global">Specification of whether the data is subscribed globally.&#10;  If this is set to true, then this subscriber will see values&#10;  published by a publisher anywhere in the model references the same&#10;  channel by name. If this is set to false (the default), then only&#10;  values published by the publisher that are fired by the same&#10;  director are seen by this subscriber.</property>
</doc>
