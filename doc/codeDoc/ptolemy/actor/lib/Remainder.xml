<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="Remainder" class="ptolemy.actor.lib.Remainder">
  <description>
&lt;p&gt;Compute the remainder after dividing the input by the divisor.&#10; The input and output data types are both double.&#10; This is implemented using the IEEEremainder() method of the java Math&#10; class, which computes the remainder as prescribed by the IEEE 754&#10; standard. The method documentation states:&lt;/p&gt;&#10; &lt;blockquote&gt;&#10; &quot;The remainder value is mathematically equal to f1 - f2 ? n, where n&#10; is the mathematical integer closest to the exact mathematical value&#10; of the quotient f1/f2, and if two mathematical integers are equally&#10; close to f1/f2, then n is the integer that is even. If the&#10; remainder is zero, its sign is the same as the sign of the first&#10; argument. Special cases:&#10; &lt;ul&gt;&#10; &lt;li&gt; If either argument is NaN, or the first argument is infinite,&#10; or the second argument is positive zero or negative zero,&#10; then the result is NaN.&lt;/li&gt;&#10; &lt;li&gt; If the first argument is finite and the second argument is&#10; infinite, then the result is the same as the first argument.&quot;&lt;/li&gt;&#10; &lt;/ul&gt;&#10; &lt;/blockquote&gt;&#10;&#10; &lt;p&gt;Note: The divisor parameter is available as an input port in&#10; the MathFunction.Modulo() method. If you need to change the divisor&#10; during run-time, the MathFunction actor may be the a better choice.&lt;/p&gt;  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 1.0.1</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Yellow (cxh)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="divisor">The divisor for calculating the remainder.&#10;  This is a double with default value 1.0.</property>
</doc>
