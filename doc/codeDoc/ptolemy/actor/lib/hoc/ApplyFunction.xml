<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ApplyFunction" class="ptolemy.actor.lib.hoc.ApplyFunction">
  <description>
This actor applies a function to its inputs and outputs the&#10; results. But rather than has the function specified statically,&#10; this actor allows dynamic change to the function, which means the&#10; computation of this actor can be changed during executing. Its&#10; second input accept a function token for the new function's&#10; definition. The function token can be given by actors in the local&#10; model or remote actors.  </description>
  <author>Steve Neuendorffer, Yang Zhao</author>
  <version>$Id$</version>
  <since>Ptolemy II 4.1</since>
  <Pt.ProposedRating>Red (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (reviewmoderator)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port.</port>
    <!--ptolemy.actor.parameters.PortParameter-->
    <property name="function">The input port for function definition. The type of this port is&#10;  undeclared, but to have this actor work, the designer has to provide&#10;  a matched function token for it.&#10;  Note: The reason that we don't declare the type for it is because&#10;  currently there is not cast supported in the FunctionType class.&#10;  we'll fix this later.</property>
</doc>
