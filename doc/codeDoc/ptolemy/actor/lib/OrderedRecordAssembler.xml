<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="OrderedRecordAssembler" class="ptolemy.actor.lib.OrderedRecordAssembler">
  <description>
On each firing, read one token from each input port and assemble them&#10; into a RecordToken. The labels for the RecordToken are the names of the&#10; input ports.  To use this class, instantiate it, and then add input ports&#10; (instances of TypedIOPort).  This actor is polymorphic. The type constraint&#10; is that the type of each record field is no less than the type of the&#10; corresponding input port.&#10; &lt;p&gt;&#10; This actor differs from the RecordAssembler in that it ensures that the&#10; order of the fields of the record is preserved, matching the order&#10; of the input ports. This is probably not relevant unless you are writing&#10; Java code that iterates over the fields of the record.&lt;/p&gt;&#10;&#10; &lt;p&gt;Note that if the display name of a port is set, display name is used in&#10; the type constraints instead of name. This is useful in case fields to&#10; add to the record contain a period, because periods are not allowed in&#10; port names.&lt;/p&gt;  </description>
  <author>Ben Leinfelder, Christopher Brooks</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Red (cxh)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
</doc>
