<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="TimeDelay" class="ptolemy.actor.lib.TimeDelay">
  <description>
This actor delays the input by a specified amount of time given by&#10; the &lt;i&gt;delay&lt;/i&gt; port or parameter, which defaults to 1.0. It is designed&#10; to be used in timed domains, particularly DE. It can also be used&#10; in other domains, such as SR and SDF, but this will only be useful if the&#10; delay value is a multiple of the period of those directors. The value&#10; of &lt;i&gt;delay&lt;/i&gt; is required to be nonnegative. In addition, if the&#10; &lt;i&gt;delay&lt;/i&gt; port is connected (and hence the delay will be variable&#10; at run time), then the values provided at the port are required to be&#10; greater than or equal &lt;i&gt;minimumDelay&lt;/i&gt;,&#10; which defaults to the initial value of &lt;i&gt;delay&lt;/i&gt;.&#10; If the &lt;i&gt;delay&lt;/i&gt; is to be changed dynamically during execution, consider&#10; setting &lt;i&gt;minimumDelay&lt;/i&gt; to 0.0.&#10; The input and output types are unconstrained, except that the output type&#10; must be the same as that of the input.&#10; &lt;p&gt;&#10; Note that in Ptides the SuperdenseDependency is used for computing&#10; offsets and deadlines. The dependency between the input and the output&#10; of this actor is the &lt;i&gt;minimumDelay&lt;/i&gt;. A &lt;i&gt;minimumDelay&lt;/i&gt; of&#10; values greater than 0.0 allows for more efficient execution of Ptides models. If&#10; this actor is used as a fixed delay actor, i.e. the delay value is not&#10; changed during the execution, the &lt;i&gt;minimumDelay&lt;/i&gt; should be set to&#10; the actual delay, which is the default.&#10; &lt;p&gt;&#10; For directors that implement &lt;a href=&quot;../../../ptolemy/actor/SuperdenseTimeDirector.xml&quot;&gt;ptolemy.actor.SuperdenseTimeDirector&lt;/a&gt;, such as&#10; DE, the output microstep of an event will match the input microstep,&#10; unless the time delay is 0.0, in which case, the output microstep will&#10; be one greater than the input microstep.&#10; A time delay of 0.0 is sometimes useful to break&#10; causality loops in feedback systems. It is sometimes useful to think&#10; of this zero-valued delay as an infinitesimal delay.&#10; &lt;p&gt;&#10; This actor keeps a local FIFO queue to store all received but not produced&#10; inputs. The behavior of this actor on each firing is to&#10; output any previously received token that is scheduled to be produced&#10; at the current time (and microstep).&#10; If there is no previously received token scheduled&#10; to be produced, then the output will be absent.&#10; &lt;p&gt;&#10; Inputs are read only during the postfire() method.&#10; If an input is present, then this actor schedules itself to fire again&#10; to produce the just received token on the corresponding output channel after&#10; the appropriate time delay. Note that if the value of delay is 0.0, the&#10; actor schedules itself to fire at the current model time, resulting in&#10; an output with an incremented microstep.&#10; &lt;p&gt;&#10; This actor can also be used in the Continuous&#10; domain, but it is only useful to delay purely discrete signals.&#10; As a consequence, for directors that implement &lt;a href=&quot;../../../ptolemy/actor/SuperdenseTimeDirector.xml&quot;&gt;ptolemy.actor.SuperdenseTimeDirector&lt;/a&gt;,&#10; this actor insists that input events have microstep 1 or greater.&#10; It will throw an exception if it receives an input with microstep 0,&#10; which in the Continuous domain, implies a continuous signal.&#10; There are two reasons for rejecting continuous inputs.&#10; First, because of the way variable-step-size ODE solvers work, the TimeDelay&#10; actor has the side effect of forcing the solver to use very small step&#10; sizes, which slows down a simulation.&#10; Second, and more important, some odd artifacts will&#10; appear if a variable step-size solver is being used. In particular, the&#10; output will be absent on any firing where there was no input at exactly&#10; time &lt;i&gt;t&lt;/i&gt; - &lt;i&gt;d&lt;/i&gt;, where &lt;i&gt;t&lt;/i&gt; is the time of the firing&#10; and &lt;i&gt;d&lt;/i&gt; is the value of the delay parameter. Thus, a continuous&#10; signal input will have gaps on the output, and will fail to be&#10;bR piecewise continuous.  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 8.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (eal)</Pt.AcceptedRating>
    <!--ptolemy.actor.parameters.PortParameter-->
    <property name="delay">The amount of delay. The default for this parameter is 1.0.&#10;  This parameter must contain a DoubleToken&#10;  with a non-negative value, or an exception will be thrown when&#10;  it is set.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="minimumDelay">Minimum delay to impose if the &lt;i&gt;delay&lt;/i&gt;&#10;  port is connected. This is a double that defaults to the value of the delay.</property>
</doc>
