<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ExpressionToToken" class="ptolemy.actor.lib.conversions.ExpressionToToken">
  <description>
This actor reads a string expression from the input port and outputs&#10; the token resulting from the evaluation.  The type of the output port&#10; is by default undeclared. To use this actor, you may need to declare&#10; the output type. Depending on how the output is used, if&#10; backward type resolution is enabled in the model&#10; (the default, see the parameters of the top-level model), then&#10; the type will resolve to the most general type acceptable to&#10; the downstream actors. If the downstream actors all propagate&#10; type constraints backwards, then it might be possible for&#10; the output type to be inferred. If backward type resolution is not enabled,&#10; then you will always need to set the type of the output&#10; port to the type of the expression that is expected.&#10; If the input string parses to something that does not match&#10; the specified output data type, then a run-time type check error&#10; will occur when this actor tries to produce its output.&#10; &lt;p&gt;&#10; The expression input can refer to any variable that is in scope&#10; for this actor.  </description>
  <author>Steve Neuendorffer</author>
  <version>$Id$</version>
  <since>Ptolemy II 2.1</since>
  <Pt.ProposedRating>Yellow (neuendor)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (liuj)</Pt.AcceptedRating>
</doc>
