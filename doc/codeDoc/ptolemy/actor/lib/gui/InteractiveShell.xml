<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="InteractiveShell" class="ptolemy.actor.lib.gui.InteractiveShell">
  <description>
&lt;p&gt;This actor creates a command shell on the screen, sending commands&#10; that are typed by the user to its output port, and reporting values&#10; received at its input by displaying them.  Each time it fires, it&#10; reads the input, displays it, then displays a command prompt&#10; (which by default is &quot;&amp;gt;&amp;gt;&quot;), and waits for a command to be&#10; typed.  The command is terminated by an enter or return character,&#10; which then results in the command being produced on the output.&#10; In a typical use of this actor, it will be preceded by a SampleDelay&#10; actor which will provide an initial welcome message or instructions.&#10; The output will then be routed to some subsystem for processing,&#10; and the result will be fed back to the input.&#10; &lt;/p&gt;&lt;p&gt;&#10; If the user types &quot;quit&quot; or &quot;exit&quot; (without the quotation marks)&#10; on the prompt, then this actor's postfire() method will return false.&#10; Depending on the domain, this can result in the model execution stopping&#10; (in SDF, for example) or in subsequent firings of this actor being&#10; skipped (in DE, for example).&#10; &lt;/p&gt;&lt;p&gt;&#10; Note that because of complexities in Swing, if you resize the display&#10; window, then, unlike the plotters, the new size will not be persistent.&#10; That is, if you save the model and then re-open it, the new size is&#10; forgotten.  The position, however, is persistent.&lt;/p&gt;  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 1.0</since>
  <Pt.ProposedRating>Yellow (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="input">The input port. By default, this has undeclared type.&#10;  If backward type inference is enabled, then it has type general.&#10;  In either case, it can receive any data type. If it receives&#10;  token of type string, it strips off the surrounding double&#10;  quotes before displaying the value.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="output">The output port.</port>
    <!--ptolemy.actor.parameters.PortParameter-->
    <property name="prompt">The prompt.  The initial default is the string &quot;&amp;gt;&amp;gt; &quot;.  Double&#10; quotes are not necessary.  If you would like to have no prompt&#10; (aka, the empty string), create a Parameter that has the value&#10; &quot;&quot; (for example &lt;code&gt;foo&lt;/code&gt;) and then set the value of the&#10; prompt parameter to &lt;code&gt;$foo&lt;/code&gt;.</property>
</doc>
