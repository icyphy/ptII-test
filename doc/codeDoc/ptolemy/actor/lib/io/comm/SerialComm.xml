<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="SerialComm" class="ptolemy.actor.lib.io.comm.SerialComm">
  <description>
Send and receive bytes via the serial port.  The serial port and&#10; baud rate are specified by parameters.&#10; &lt;p&gt;&#10; This actor requires that the RXTX serial port API be installed&#10; from&#10;&lt;a href=&quot;http://mfizz.com/oss/rxtx-for-java&quot;&gt;http://mfizz.com/oss/rxtx-for-java&lt;/a&gt;.&#10;&#10; &lt;p&gt;Under Windows, download the zip file, then do something like:&lt;/p&gt;&#10; &lt;pre&gt;&#10; cp ~/src/rxtx/mfz-rxtx-2.2-20081207-win-x64/RXTXcomm.jar c:/Program\ Files/Java/jdk1.7.0_51/jre/lib/ext/&#10; cp ~/src/rxtx/mfz-rxtx-2.2-20081207-win-x64/*.dll c:/Program\ Files/Java/jdk1.7.0_51/jre/bin&#10; &lt;/pre&gt;&#10; &lt;p&gt;And then rerun &lt;code&gt;(cd $PTII;./configure)&lt;/code&gt;&lt;/p&gt;&#10;&#10; &lt;p&gt;This actor can be used in most domains, but the parameters must&#10; be chosen carefully to match the domain semantics.  This actor sets&#10; up a listener to the serial port, and when input data appears on the&#10; serial port, it calls fireAtCurrentTime() on the director.  This&#10; behavior is useful in the DE domain, for example (although you will&#10; likely have to set the &lt;i&gt;stopWhenQueueIsEmpty&lt;/i&gt; parameter of the&#10; director false).&#10;&#10; &lt;p&gt; Some domains, however, such as SDF, ignore the fireAtCurrentTime()&#10; call.  Such domains, will typically fire this actor when its outputs&#10; are needed. Consequently, for use in such domains, you will likely&#10; want to set the &lt;i&gt;blocking&lt;/i&gt; parameter of this actor to true.&#10; When this parameter is true, the fire() method first reads data on&#10; its input port (if any) and writes it to the serial port, and then&#10; blocks until sufficient input data are available at the serial port.&#10; It then reads that data from the serial port and packages it as&#10; a byte array to produce on the output of this actor.&#10;&#10; &lt;p&gt;The inputs and outputs of this actor are unsigned byte arrays.&#10; The &lt;i&gt;minimumOutputSize&lt;/i&gt; parameter specifies the minimum number of&#10; bytes that are produced on the output in each firing.  The&#10; &lt;i&gt;maximumOutputSize&lt;/i&gt; parameter specifies the maximum number&#10; of bytes that are produced on the output on each firing. If these&#10; two numbers are equal, then when a firing produces data, it will&#10; always produce the same amount of data.  Otherwise, the amount&#10; of data produced is nondeterministic.&#10;&#10; &lt;p&gt;The &lt;i&gt;discardOldData&lt;/i&gt; parameter, if true, indicates&#10; that the fire() method may discard bytes.  In particular, if&#10; there are more than &lt;i&gt;maximumOutputSize&lt;/i&gt; bytes available&#10; on the serial port, then all but the most recent &lt;i&gt;maximumOutputSize&lt;/i&gt;&#10; will be discarded.&#10;&#10; &lt;p&gt;For example, if you wish for this actor to produce only the&#10; most recent byte read on the serial port each time it fires,&#10; set &lt;i&gt;discardOldData&lt;/i&gt; to true, &lt;i&gt;blocking&lt;/i&gt; to true,&#10; and both &lt;i&gt;minimumOutputSize&lt;/i&gt; and &lt;i&gt;maximumOutputSize&lt;/i&gt;&#10; to 1.&#10;&#10; &lt;p&gt; If after firing there are additional data available on the&#10; input port, then the fire() method will call fireAtCurrentTime()&#10; on the director before returning.&#10; &lt;p&gt;&#10; Note that if there are multiple instances of this actor in a model, then unless&#10; the model designer has taken special care to ensure sequential&#10; execution of the actor, inputs from the serial port may be&#10; nondeterministically received by any of the actors.  </description>
  <author>Winthrop Williams, Joern Janneck, Xiaojun Liu, Edward A. Lee&#10; (Based on my RxDatagram, and on the IRLink class written by Xiaojun Liu)</author>
  <version>$Id$</version>
  <since>Ptolemy II 2.0</since>
  <Pt.ProposedRating>red (winthrop)</Pt.ProposedRating>
  <Pt.AcceptedRating>red (winthrop)</Pt.AcceptedRating>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="dataToSend">The input port for data to be sent to the serial port.&#10;  This port has type unsigned byte array.</port>
    <!--ptolemy.actor.TypedIOPort-->
    <port name="dataReceived">The output port for data that has been received by the serial port.&#10;  This port has type unsigned byte array.</port>
    <!--ptolemy.data.expr.Parameter-->
    <property name="baudRate">The baud rate of the serial port, such as 19200 (the default),&#10;  19200, or 115200, for the serial port.  This has&#10;  type integer and defaults to 19200.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="blocking">Indicator of whether fire method is blocking.  If true, fire()&#10;  waits until &lt;i&gt;minimumOutputSize&lt;/i&gt; bytes have arrived.&#10;  The type is boolean with default false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="discardOldData">Indicator of whether to discard old data. If this is true,&#10;  then the fire() method will read all available data, but produce&#10;  no more than &lt;i&gt;maximumOutputSize&lt;/i&gt; bytes on the output,&#10;  discarding the rest.  This is a boolean that defaults to false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="maximumOutputSize">The maximum number of bytes produced in each firing on the output.&#10;  This is an integer that defaults to MaxInt. It is required to be&#10;  at least as large as &lt;i&gt;minimumOutputSize&lt;/i&gt;</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="minimumOutputSize">The minimum number of bytes that will be read from the serial&#10;  port and produced on the output.  This is required to be a&#10;  strictly positive integer, and it defaults to 1.</property>
    <!--ptolemy.data.expr.StringParameter-->
    <property name="serialPortName">Attribute giving the serial port to use. This is a string with&#10;  the default being the first serial port listed by the&#10;  javax.comm.CommPortIdentifier class.  If there are no serial&#10;  ports available (meaning probably that the javax.comm package&#10;  is not installed properly), then the value of the string will&#10;  be &quot;no ports available&quot;.</property>
</doc>
