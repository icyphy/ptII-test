<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="LayoutHint" class="ptolemy.vergil.actor.LayoutHint">
  <description>
A LayoutHint is an Attribute for Ptolemy Relations that holds the&#10; specification of bend points for links. Its value field contains a list of&#10; &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint/LayoutHintItem.xml&quot;&gt;ptolemy.vergil.actor.LayoutHint.LayoutHintItem&lt;/a&gt; objects because one Relation can correspond to&#10; multiple links, which are not real objects in the Ptolemy abstract syntax and&#10; therefore can not carry any attributes. Each item carries a list of&#10; bendpoints for a specific link as well as a location for a label&#10; of the link (if it exists).&#10; &lt;p&gt;&#10; The LayoutHint uses a Ptolemy Expression as its value in which the&#10; &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint/LayoutHintItem.xml&quot;&gt;ptolemy.vergil.actor.LayoutHint.LayoutHintItem&lt;/a&gt; objects are encoded. Therefore the Expression is&#10; expected to contain an &lt;a href=&quot;../../../ptolemy/data/ArrayToken.xml&quot;&gt;ptolemy.data.ArrayToken&lt;/a&gt; of &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint/LayoutHintItem.xml&quot;&gt;ptolemy.vergil.actor.LayoutHint.LayoutHintItem&lt;/a&gt; objects.&lt;/p&gt;&#10;&#10; &lt;p&gt;&#10; A complete LayoutHint with two &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint/LayoutHintItem.xml&quot;&gt;ptolemy.vergil.actor.LayoutHint.LayoutHintItem&lt;/a&gt;s could look like this:&lt;/p&gt;&#10;&#10; &lt;pre&gt;&#10; {&#10;   {&#10;     head={id=&quot;Discard.input&quot;,x=60.0,y=115.0,index=2},&#10;     tail={id=&quot;CompositeActor.port3&quot;,x=300.0,y=380.0,index=3},&#10;     points={105.0,235.0,105.0,190.0,265.0,190.0,265.0,135.0}&#10;   },&#10;   {&#10;     head={id=&quot;Ramp.output&quot;,x=320.0,y=225.0},&#10;     tail={id=&quot;CompositeActor.port2&quot;,x=580.0,y=200.0,index=3},&#10;     points={135.0,25.0,135.0,125.0},&#10;     labelLocation={x=340.0,y=210.0}&#10;   }&#10; }&#10; &lt;/pre&gt;&#10;&#10; &lt;p&gt;This storage works like a &lt;a href=&quot;../../../java/util/Map.html&quot;&gt;java.util.Map&lt;/a&gt; with always two keys. One&#10; &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint/LayoutHintItem.xml&quot;&gt;ptolemy.vergil.actor.LayoutHint.LayoutHintItem&lt;/a&gt; is unambiguously identified by its head and tail,&#10; which are Ptolemy objects like &lt;a href=&quot;../../../ptolemy/kernel/Port.xml&quot;&gt;ptolemy.kernel.Port&lt;/a&gt;s or &lt;a href=&quot;../../../ptolemy/kernel/Relation.xml&quot;&gt;ptolemy.kernel.Relation&lt;/a&gt;s. The&#10; methods to access this are &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint.html#getLayoutHintItem&quot;&gt;getLayoutHintItem(Object, Object)&lt;/a&gt;,&#10; &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint.html#setLayoutHintItem&quot;&gt;setLayoutHintItem(NamedObj, NamedObj, double[], Point2D.Double)&lt;/a&gt; and&#10; &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint.html#removeLayoutHintItem&quot;&gt;removeLayoutHintItem(LayoutHintItem)&lt;/a&gt;.&lt;/p&gt;&#10;&#10; &lt;p&gt; The class extends &lt;a href=&quot;../../../ptolemy/kernel/util/SingletonAttribute.xml&quot;&gt;ptolemy.kernel.util.SingletonAttribute&lt;/a&gt; because every&#10; Relation is expected to have only one such Attribute, while one of&#10; these Attributes can carry multiple &lt;a href=&quot;../../../ptolemy/vergil/actor/LayoutHint/LayoutHintItem.xml&quot;&gt;ptolemy.vergil.actor.LayoutHint.LayoutHintItem&lt;/a&gt;s as&#10; explained above. It is also &lt;a href=&quot;../../../ptolemy/kernel/util/Settable.xml&quot;&gt;ptolemy.kernel.util.Settable&lt;/a&gt; as&#10; it can be set by loading a MOML file or by setting it manually&#10; through the GUI. However, usually its visibility is set to EXPERT&#10; mode only.&lt;/p&gt;&#10;&#10; &lt;p&gt;&#10; Some of the standard code for example for value listeners is copied from&#10; &lt;a href=&quot;../../../ptolemy/kernel/util/Location.xml&quot;&gt;ptolemy.kernel.util.Location&lt;/a&gt;.&lt;/p&gt;  </description>
  <author>Hauke Fuhrmann, (kieler@informatik.uni-kiel.de), Ulf Rueegg</author>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>Red (haf)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (haf)</Pt.AcceptedRating>
</doc>
