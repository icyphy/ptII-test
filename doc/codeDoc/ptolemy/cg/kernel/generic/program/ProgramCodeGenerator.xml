<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="ProgramCodeGenerator" class="ptolemy.cg.kernel.generic.program.ProgramCodeGenerator">
  <description>
Generate a compiled programming language version of a model.&#10;&#10;  &lt;p&gt;This base class contains parameters and methods common to&#10;   all compiled programming languages.&lt;/p&gt;  </description>
  <author>Bert Rodiers</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
  <Pt.ProposedRating>red (rodiers)</Pt.ProposedRating>
  <Pt.AcceptedRating>red (rodiers)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="generateComment">If true, generate comments in the output code; otherwise,&#10;  no comments is generated. The default value is a parameter&#10;  with the value true.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="inline">If true, generate file with no functions.  If false, generate&#10;  file with functions. The default value is a parameter with the&#10;  value false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="maximumLinesPerBlock">The maximum number of lines per block.  Maximum number of&#10;  lines in initialize(), postfire() and wrapup() methods. This&#10;  parameter is used to make smaller methods so that compilers&#10;  take less time to compile.  Most target languages have limits&#10;  to the size of a block or method.  If a block or method has&#10;  more lines than this value, then some code generators may try&#10;  to split of the code.  Note that this is very experimental.&#10;  The default value is an integer with value 2500.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="measureTime">If true, generate code to measure the execution time.&#10;  The default value is a parameter with the value false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="sourceLineBinding">If true, then the generated source is bound to the line&#10;  number and file of the (adapter) templates. Otherwise, the&#10;  source is bound only to the output file. This is a boolean&#10;  parameter with default value false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="useMake">If true, then use the 'make' command to compile and run&#10;  the generated code.  The default is true;</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="variablesAsArrays">If true, then generate code that puts variables into arrays;&#10;  otherwise, use standalone variables.  This parameter is used&#10;  for very large models that would otherwise generate code that&#10;  cannot be compiled by the Java compiler.  If this is the case,&#10;  then javac will produce an error message like &quot;too many&#10;  constants&quot;. The default value is a parameter with the value&#10;  false.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="verbosity">Level of verbosity in comments and other output.  Levels&#10;  greater than 0 will cause the code generator to generate more&#10;  detailed information about the operation of the code&#10;  generator.  If the value of the &lt;i&gt;verbosity&lt;/i&gt; parameter is&#10;  greater than 9, then the comment is prepended with the name of&#10;  the method that called the method that called this method.&#10;  This is useful for debugging.  The default is an integer with&#10;  the value 0, which indicates that the lowest level of&#10;  verbosity.</property>
</doc>
