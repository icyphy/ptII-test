<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="DistributedSDFDirector" class="ptolemy.distributed.domains.sdf.kernel.DistributedSDFDirector">
  <description>
Director for the distributed version of the synchronous dataflow (SDF)&#10; model of computation.&#10; &lt;h1&gt;Distributed-SDF overview&lt;/h1&gt;&#10; The Distributed-SDF domain is an extended version of the existing SDF&#10; Domain that performs the simulation in a distributed manner.&#10; &lt;h2&gt;Requirements&lt;/h2&gt;&#10; &lt;ul&gt;&#10; &lt;li&gt;A distributed platform is required to perform the simulation.&#10; &lt;li&gt;Every node in the distributed platform has to run a server&#10; application (DistributedServerRMIGeneric).&#10; &lt;li&gt;A Jini service locator must be running on one of the nodes (peer&#10; discovery).&#10; &lt;/ul&gt;&#10; &lt;h2&gt;Features&lt;/h2&gt;&#10; &lt;ul&gt;&#10; &lt;li&gt;Exploits the degree of parallelism that many models expose in&#10; their topology.&#10; &lt;li&gt;The distributed execution is transparent to the user.&#10; &lt;li&gt;Keeps the existing software architecture untouched, only extending&#10; it. (Except some minor modifications in the SDFScheduler).&#10; &lt;li&gt;It achieves smaller simulation times for models with certain degree&#10; of parallelism, specially those were:&#10; cost(computation) &amp;gt;&amp;gt;&amp;gt;&amp;gt; cost(communication).&#10; &lt;li&gt;Allows for bigger models (in terms of memory consumption).&#10; &lt;/ul&gt;&#10; &lt;p&gt;&#10; A DistributedSDFDirector is the class that controls execution of actors&#10; under the distributed version of the SDF domain. It extends SDFDirector.&#10; &lt;p&gt;&#10; By default, actor scheduling is handled by the DistributedSDFScheduler&#10; class. Furthermore, the newReceiver method creates Receivers of type&#10; DistributedSDFReceiver, which extends SDFReceiver.&#10; &lt;p&gt;&#10; See ptolemy.domains.sdf.kernel.SDFScheduler for more information about&#10; the SDF Domain.&#10; &lt;p&gt;&#10; &lt;h2&gt;Parameters&lt;/h2&gt;&#10; &lt;ul&gt;&#10; &lt;li&gt;The &lt;i&gt;parallelSchedule&lt;/i&gt; parameter of this director determines&#10; whether a sequential or parallel schedule will be performed.&#10; The default value of the parallelSchedule parameter is a&#10; BooleanToken with the value false.&#10; &lt;li&gt;The &lt;i&gt;parallelExecution&lt;/i&gt; parameter of this director determines&#10; whether a sequential or parallel execution will be performed.&#10; The default value of the parallelExecution parameter is a&#10; BooleanToken with the value false.&#10; &lt;/ul&gt;  </description>
  <author>Daniel Lazaro Cuadrado (kapokasa@kom.aau.dk)</author>
  <version>$Id$</version>
  <since>Ptolemy II 5.1</since>
  <Pt.ProposedRating>Red (kapokasa)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (cxh)</Pt.AcceptedRating>
    <!--ptolemy.data.expr.Parameter-->
    <property name="parallelSchedule">A Parameter representing whether a sequential or parallel schedule&#10;  will be computed.&#10;  This parameter must be a boolean.&#10;  The default value is false BooleanToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="pipelining">A Parameter representing whether a pipelined parallel execution&#10;  will be performed. A pipelined execution only makes sense when&#10;  parallel execution is true.&#10;  This parameter must be a boolean.&#10;  The default value is false BooleanToken.</property>
    <!--ptolemy.data.expr.Parameter-->
    <property name="parallelExecution">A Parameter representing whether a sequential or parallel execution&#10;  will be performed.&#10;  This parameter must be a boolean.&#10;  The default value is false BooleanToken.</property>
</doc>
