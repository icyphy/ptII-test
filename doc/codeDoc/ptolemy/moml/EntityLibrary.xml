<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="EntityLibrary" class="ptolemy.moml.EntityLibrary">
  <description>
This class provides a hierarchical library of components specified&#10; in MoML.  The contents are typically specified via the configure()&#10; method, which is passed MoML code.  The MoML is evaluated&#10; lazily; i.e. it is not actually evaluated until there is a request&#10; for its contents, via a call to getEntity(), numEntities(),&#10; entityList(), or any related method. You can also force evaluation&#10; of the MoML by calling populate().  When you export MoML for this&#10; object, the MoML description of the contents is wrapped in a configure&#10; element.  This object contains an attribute with name &quot;_libraryMarker&quot;,&#10; which marks it as a library.  This is used by the library browser in&#10; vergil to know to expand the composite entity.&#10; &lt;p&gt;&#10; The contents of the library can be entities, ports, relations, or&#10; attributes.  I.e., it can contain anything contained by a CompositeEntity.&#10; An attempt to access any of these will trigger populating the library.&#10; &lt;p&gt;&#10; The configure method can be given a URL or MoML text or both.&#10; If it is given MoML text, that text will normally be wrapped in a&#10; processing instruction, as follows:&#10; &lt;pre&gt;&#10; &amp;lt;?moml&#10; &amp;lt;group&amp;gt;[&#10; ... &lt;i&gt;MoML elements giving library contents&lt;/i&gt; ...&#10; &amp;lt;/group&amp;gt;&#10; ?&amp;gt;&#10; &lt;/pre&gt;&#10; The processing instruction, which is enclosed in &quot;&amp;lt;?&quot; and &quot;?&amp;gt;&quot;&#10; prevents premature evaluation of the MoML.  The processing instruction&#10; has a &lt;i&gt;target&lt;/i&gt;, &quot;moml&quot;, which specifies that it contains MoML code.&#10; The keyword &quot;moml&quot; in the processing instruction must&#10; be exactly as above, or the entire processing instruction will&#10; be ignored.  The populate() method&#10; strips off the processing instruction and evaluates the MoML elements.&#10; The group element allows the library contents to be given as a set&#10; of elements (the MoML parser requires that there always be a single&#10; top-level element, which in this case will be the group element).&#10; &lt;p&gt;&#10; One subtlety in using this class arises because of a problem typical&#10; of lazy evaluation.  A number of exceptions may be thrown because of&#10; errors in the MoML code when the MoML code is evaluated.  However,&#10; since that code is evaluated lazily, it is evaluated in a context&#10; where these exceptions are not expected.  There is no completely&#10; clean solution to this problem; our solution is to translate all&#10; exceptions to runtime exceptions in the populate() method.&#10; This method, therefore, violates the condition for using runtime&#10; exceptions in that the condition that causes these exceptions to&#10; be thrown is not a testable precondition.&#10; &lt;p&gt;&#10; A second subtlety involves cloning.  When this class is cloned,&#10; if the configure MoML text has not yet been evaluated, then the clone&#10; is created with the same (unevaluated) MoML text, rather than being&#10; populated with the contents specified by that text.  If the object&#10; is cloned after being populated, the clone will also be populated.&#10; &lt;p&gt;&#10; A third subtlety involves the doc element.  Unfortunately, MoML&#10; semantics define the doc element to replace any previously existing&#10; doc elements.  But to find out whether there is any previously&#10; existing doc element, the MoML parser calls getAttribute, which&#10; has the effect of populating the library.  Thus, doc elements&#10; should go inside the group, not outside.  For example, the&#10; following organization results in no deferred evaluation:&#10; &lt;pre&gt;&#10; &amp;lt;entity name=&quot;director library&quot; class=&quot;ptolemy.moml.EntityLibrary&quot;&amp;gt;&#10; &amp;lt;doc&amp;gt;default director library&amp;lt;/doc&amp;gt;&#10; &amp;lt;configure&amp;gt;&#10; &amp;lt;?moml&#10; &amp;lt;group&amp;gt;&#10; ...&#10; &amp;lt;/group&amp;gt;&#10; ?&amp;gt;&#10; &amp;lt;/configure&amp;gt;&#10; &amp;lt;/entity&amp;gt;&#10; &lt;/pre&gt;&#10; The following, by contrast, is OK:&#10; &lt;pre&gt;&#10; &amp;lt;entity name=&quot;director library&quot; class=&quot;ptolemy.moml.EntityLibrary&quot;&amp;gt;&#10; &amp;lt;configure&amp;gt;&#10; &amp;lt;?moml&#10; &amp;lt;group&amp;gt;&#10; &amp;lt;doc&amp;gt;default director library&amp;lt;/doc&amp;gt;&#10; ...&#10; &amp;lt;/group&amp;gt;&#10; ?&amp;gt;&#10; &amp;lt;/configure&amp;gt;&#10; &amp;lt;/entity&amp;gt;&#10; &lt;/pre&gt;  </description>
  <author>Edward A. Lee</author>
  <version>$Id$</version>
  <since>Ptolemy II 1.0</since>
  <Pt.ProposedRating>Red (eal)</Pt.ProposedRating>
  <Pt.AcceptedRating>Red (bilung)</Pt.AcceptedRating>
</doc>
