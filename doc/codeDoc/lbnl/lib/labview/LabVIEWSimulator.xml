<?xml version="1.0" standalone="yes"?>
<!DOCTYPE doc PUBLIC "-//UC Berkeley//DTD DocML 1//EN"
    "http://ptolemy.eecs.berkeley.edu/xml/dtd/DocML_1.dtd">
<doc name="LabVIEWSimulator" class="lbnl.lib.labview.LabVIEWSimulator">
  <description>
Actor that works with a LabVIEW simulation program. To use this&#10; actor, the LabVIEW program must follow a fixed semantics, which is&#10; specified later in this documentation.&#10; &lt;p&gt;&#10; This actor communicates the LabVIEW simulation program, as well&#10; as synchronizes simulated physical time between these two platforms.&#10; This actor assumes the Ptolemy program dictates what time to advance&#10; to, while the LabVIEW program proposes times to advance to.&#10; &lt;/p&gt;&lt;p&gt;&#10; This actor can be invoked in two cases, one, when an input is received&#10; from the Ptolemy II simulation; two, when this actor triggers itself to&#10; fire at some future time through the use of pure events. In either case,&#10; outputs may or may not be produced by this actor. However, since the&#10; timeline this actor deals with is the simulated physical time,&#10; the outputs produced should not be a response of consumed input at&#10; the same time. The LabVIEW program should ensure this behavior.&#10; &lt;/p&gt;&lt;p&gt;&#10; At initialization, this actor reads input from the LabVIEW program,&#10; which proposes a simulated physical time (hereby referred to as &quot;time&quot;,&#10; unless otherwise stated) to advance to. This actor then produces a&#10; pure event (by calling fireAt() of the director, with this time as&#10; its timestamp. Notice this time may or may not be different from&#10; the current time of the Ptolemy simulation environment.&#10; &lt;/p&gt;&lt;p&gt;&#10; The director will invoke this actor either when a trigger event&#10; arrives at this actor's input port, or when the pure event produced&#10; earlier triggers this event. In the first case, the input is consumed,&#10; and this data is transmitted into the LabVIEW program. The LabVIEW&#10; program should then react to this input and propose the next time to&#10; advance to, and send it back to the Ptolemy actor. Also, if a previous&#10; input has decided to produce an output at the current time, then an output&#10; will be produced by the LabVIEW program at the current time, and that&#10; output will be produced by this actor.&#10; &lt;/p&gt;&lt;p&gt;&#10; The key assumption we make about the LabVIEW program is that it always&#10; has information about what is the next time it wants to advance to.&#10; Thus at any point in time when the LabVIEW program is invoked, it&#10; proposes a new time to advance to, and send that time to the Ptolemy&#10; program.  </description>
  <author>Jia Zou</author>
  <version>$Id$</version>
  <since>Ptolemy II 10.0</since>
</doc>
